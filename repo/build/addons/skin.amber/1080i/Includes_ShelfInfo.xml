<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="ShelfInfoCast">
	    <value>$VAR[ShelfInfoCast1]$VAR[ShelfInfoCast2]$VAR[ShelfInfoCast3]$VAR[ShelfInfoCast4]$VAR[ShelfInfoCast5]$VAR[ShelfInfoCast6]$VAR[ShelfInfoCast7]$VAR[ShelfInfoCast8]$VAR[ShelfInfoCast9]$VAR[ShelfInfoCast10]</value>
	</variable>

	<variable name="ShelfInfoCast1">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[206]:[/COLOR] [B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.1.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[206]:[/COLOR] [B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.1.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[206]:[/COLOR] [B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[206]:[/COLOR] [B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.1.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast2">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.2.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.2.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.2.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast3">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.3.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.3.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.3.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast4">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.4.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.4.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.4.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast5">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.5.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.5.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.5.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast6">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.6.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.6.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.6.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast7">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.7.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.7.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.7.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast8">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.8.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.8.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.8.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast9">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.9.Role)][/I]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.9.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Role)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)][/B]  / </value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Role)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name))">$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.9.Name))"></value>
	</variable>
	<variable name="ShelfInfoCast10">
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name)) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Role))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name)][/B] [LOWERCASE]$LOCALIZE[20347][/LOWERCASE] [I]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.10.Role)][/I]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name)) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Role))">[B]$INFO[Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Cast.10.Name))"></value>
	</variable>

	<variable name="ShelfInfoDetails">
	    <value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes] [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes] [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes] [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes] [COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + !String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[13409] # [/COLOR]$INFO[Container.ListItem.Top250]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,movie) + String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Top250) + String.IsEmpty(Container.ListItem.Duration) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[345]: [/COLOR]$INFO[Container.ListItem.Year]</value>
	    <value condition="String.IsEqual(Container.ListItem.DBType,episode) + !String.IsEmpty(Container.ListItem.Rating) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[32294]: [/COLOR]$INFO[Container.ListItem.EndTime]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,episode) + !String.IsEmpty(Container.ListItem.Rating) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[32294]: [/COLOR]$INFO[Container.ListItem.EndTime]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,episode) + String.IsEmpty(Container.ListItem.Rating) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[32294]: [/COLOR]$INFO[Container.ListItem.EndTime]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,episode) + String.IsEmpty(Container.ListItem.Rating) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[32294]: [/COLOR]$INFO[Container.ListItem.EndTime]</value>
	    <value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Premiered)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Container.ListItem.Premiered]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + !String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Premiered)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.RatingAndVotes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[562]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + String.IsEmpty(Container.ListItem.RatingAndVotes) + !String.IsEmpty(Container.ListItem.Premiered)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Container.ListItem.Premiered]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,tvshow) + String.IsEmpty(Container.ListItem.RatingAndVotes) + String.IsEmpty(Container.ListItem.Premiered)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[562]: [/COLOR]$INFO[Container.ListItem.Year]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,musicvideo) + !String.IsEmpty(Container.ListItem.Rating) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,musicvideo) + !String.IsEmpty(Container.ListItem.Rating) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.Rating]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,musicvideo) + String.IsEmpty(Container.ListItem.Rating) + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,musicvideo) + String.IsEmpty(Container.ListItem.Rating) + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="[String.IsEqual(Container.ListItem.DBType,video) + !String.Contains(Container.ListItem.FolderPath,type=person)] + !Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Container.ListItem.Premiered]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$INFO[Window(Home).Property(WidgetItemDuration)]</value>
		<value condition="[String.IsEqual(Container.ListItem.DBType,video) + !String.Contains(Container.ListItem.FolderPath,type=person)] + Skin.HasSetting(Enable.HourMinutes)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20416]: [/COLOR]$INFO[Container.ListItem.Premiered]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[2050]: [/COLOR]$VAR[WidgetItemDurationVar]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Property(recommendedtitle)) + !String.IsEmpty(Container.ListItem.Property(recommendedrating))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[31037]: [/COLOR]$INFO[Container.ListItem.Property(recommendedrating)]</value>
	</variable>

	<variable name="ShelfInfoTVShowDetails">
	    <value>[COLOR=$VAR[HighlightColor]]$LOCALIZE[33054]: [/COLOR]$VAR[ShelfInfoTotalSeasons]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[20360]: [/COLOR]$VAR[ShelfInfoTotalEpisodes]  [COLOR=$VAR[HighlightColor]]$LOCALIZE[16101]: [/COLOR]$INFO[Container.ListItem.Property(UnwatchedEpisodes)]</value>
	</variable>

	<variable name="ShelfInfoNextAiredDetails">
	    <value condition="!String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Name))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[32459]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired)] - $VAR[ShelfInfoNextAiredSeasonEpisodeLabel] - $INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Name)]</value>
		<value condition="String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Name))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[32459]: [/COLOR]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired)] - $VAR[ShelfInfoNextAiredSeasonEpisodeLabel]</value>
	</variable>

	<variable name="ShelfInfoStudios">
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),coloured)">resource://resource.images.studios.coloured/$INFO[Container.ListItem.Studio,,.png]</value>
        <value condition="!String.IsEmpty(Skin.String(studiosResource.path)) + String.Contains(Skin.String(studiosResource.path),white)">resource://resource.images.studios.white/$INFO[Container.ListItem.Studio,,.png]</value>
        <value>DefaultStudios.png</value>
    </variable>

	<variable name="ShelfInfoTitle">
	    <value condition="String.IsEqual(Container.ListItem.DBType,movie) | String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,musicvideo) | String.IsEqual(Container.ListItem.DBType,video)">$INFO[Container.ListItem.Title]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,episode)">$INFO[Container.ListItem.TVShowTitle]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,artist)">$INFO[Container.ListItem.Artist]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,album)">$INFO[Container.ListItem.Album]</value>
		<value condition="String.IsEqual(Container.ListItem.DBType,song)">$INFO[Container.ListItem.TrackNumber]. $INFO[Container.ListItem.Title]</value>
		<value condition="!String.IsEmpty(Container.ListItem.AddonName)">$INFO[Container.ListItem.AddonName]</value>
		<value>$INFO[Container.ListItem.Label]</value>
	</variable>

	<variable name="ShelfInfoCertFlag">
        <value condition="[String.IsEmpty(Container.ListItem.MPAA) | String.Contains(Container.ListItem.MPAA,NR) | String.IsEqual(Container.ListItem.MPAA,Rated) | String.IsEqual(Container.ListItem.MPAA,Rated ) | String.IsEqual(Container.ListItem.MPAA,Not Rated) | String.IsEqual(Container.ListItem.MPAA,Rated Not Rated)]">badges/mpaa/NR.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,movie) + [String.StartsWith(Container.ListItem.MPAA,16) | String.StartsWith(Container.ListItem.MPAA,18)]] | String.Contains(Container.ListItem.MPAA,US:R) | String.Contains(Container.ListItem.MPAA,United States:R) | String.Contains(Container.ListItem.MPAA,USA:R) | String.IsEqual(Container.ListItem.MPAA,Rated R) | String.IsEqual(Container.ListItem.MPAA,R)">badges/mpaa/R.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,US:X) | String.Contains(Container.ListItem.MPAA,United States:X) | String.Contains(Container.ListItem.MPAA,USA:X) | String.IsEqual(Container.ListItem.MPAA,Rated X) | String.IsEqual(Container.ListItem.MPAA,X)">badges/mpaa/X.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,US:NC-17) | String.Contains(Container.ListItem.MPAA,United States:NC-17) | String.Contains(Container.ListItem.MPAA,USA:NC-17) | String.IsEqual(Container.ListItem.MPAA,Rated NC-17) | String.IsEqual(Container.ListItem.MPAA,NC-17)">badges/mpaa/NC-17.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,movie) + String.StartsWith(Container.ListItem.MPAA,13)] | String.Contains(Container.ListItem.MPAA,US:PG-13) | String.Contains(Container.ListItem.MPAA,United States:PG-13) | String.Contains(Container.ListItem.MPAA,USA:PG-13) | String.IsEqual(Container.ListItem.MPAA,Rated PG-13) | String.IsEqual(Container.ListItem.MPAA,PG-13)">badges/mpaa/PG-13.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,movie) + String.StartsWith(Container.ListItem.MPAA,7)] | String.Contains(Container.ListItem.MPAA,US:PG) | String.Contains(Container.ListItem.MPAA,United States:PG) | String.Contains(Container.ListItem.MPAA,USA:PG) | String.IsEqual(Container.ListItem.MPAA,Rated PG) | String.IsEqual(Container.ListItem.MPAA,PG)">badges/mpaa/PG.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,movie) + String.StartsWith(Container.ListItem.MPAA,All)] | String.Contains(Container.ListItem.MPAA,US:G) | String.Contains(Container.ListItem.MPAA,United States:G) | String.Contains(Container.ListItem.MPAA,USA:G) | String.IsEqual(Container.ListItem.MPAA,Rated G) | String.IsEqual(Container.ListItem.MPAA,G) | String.IsEqual(Container.ListItem.MPAA,Rated Approved) | String.Contains(Container.ListItem.MPAA,Approved) | String.IsEqual(Container.ListItem.MPAA,Rated Passed) | String.Contains(Container.ListItem.MPAA,Passed)">badges/mpaa/G.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,US:TV-Y) | String.Contains(Container.ListItem.MPAA,United States:TV-Y) | String.Contains(Container.ListItem.MPAA,USA:TV-Y) | String.IsEqual(Container.ListItem.MPAA,Rated TV-Y) | String.IsEqual(Container.ListItem.MPAA,TV-Y)">badges/mpaa/TV-Y.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,US:TV-Y7) | String.Contains(Container.ListItem.MPAA,United States:TV-Y7) | String.Contains(Container.ListItem.MPAA,USA:TV-Y7) | String.IsEqual(Container.ListItem.MPAA,Rated TV-Y7) | String.IsEqual(Container.ListItem.MPAA,TV-Y7)">badges/mpaa/TV-Y7.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,tvshow) + String.StartsWith(Container.ListItem.MPAA,All)] | String.Contains(Container.ListItem.MPAA,US:TV-G) | String.Contains(Container.ListItem.MPAA,United States:TV-G) | String.Contains(Container.ListItem.MPAA,USA:TV-G) | String.IsEqual(Container.ListItem.MPAA,Rated TV-G) | String.IsEqual(Container.ListItem.MPAA,TV-G)">badges/mpaa/TV-G.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,tvshow) + String.StartsWith(Container.ListItem.MPAA,7)] | String.Contains(Container.ListItem.MPAA,US:TV-PG) | String.Contains(Container.ListItem.MPAA,United States:TV-PG) | String.Contains(Container.ListItem.MPAA,USA:TV-PG) | String.IsEqual(Container.ListItem.MPAA,Rated TV-PG) | String.IsEqual(Container.ListItem.MPAA,TV-PG)">badges/mpaa/TV-PG.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,tvshow) + String.StartsWith(Container.ListItem.MPAA,13)] | String.Contains(Container.ListItem.MPAA,US:TV-14) | String.Contains(Container.ListItem.MPAA,United States:TV-14) | String.Contains(Container.ListItem.MPAA,USA:TV-14) | String.IsEqual(Container.ListItem.MPAA,Rated TV-14) | String.IsEqual(Container.ListItem.MPAA,TV-14)">badges/mpaa/TV-14.png</value>
        <value condition="[String.IsEqual(Container.ListItem.DBType,tvshow) + [String.StartsWith(Container.ListItem.MPAA,16) | String.StartsWith(Container.ListItem.MPAA,18)]] | String.Contains(Container.ListItem.MPAA,US:TV-MA) | String.Contains(Container.ListItem.MPAA,United States:TV-MA) | String.Contains(Container.ListItem.MPAA,USA:TV-MA) | String.IsEqual(Container.ListItem.MPAA,Rated TV-MA) | String.IsEqual(Container.ListItem.MPAA,TV-MA)">badges/mpaa/TV-MA.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:U) | String.Contains(Container.ListItem.MPAA,United Kingdom:U) | String.IsEqual(Container.ListItem.MPAA,UK:U)">badges/mpaa/UK_BBFC_U.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:A) | String.Contains(Container.ListItem.MPAA,United Kingdom:A) | String.Contains(Container.ListItem.MPAA,UK:PG) | String.Contains(Container.ListItem.MPAA,United Kingdom:PG) | String.IsEqual(Container.ListItem.MPAA,UK:PG)">badges/mpaa/UK_BBFC_PG.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:12A) | String.Contains(Container.ListItem.MPAA,United Kingdom:12A) | String.IsEqual(Container.ListItem.MPAA,UK:12A)">badges/mpaa/UK_BBFC_12A.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:12) | String.Contains(Container.ListItem.MPAA,United Kingdom:12) | String.IsEqual(Container.ListItem.MPAA,UK:12)">badges/mpaa/UK_BBFC_12.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:15) | String.Contains(Container.ListItem.MPAA,United Kingdom:15) | String.IsEqual(Container.ListItem.MPAA,UK:15)">badges/mpaa/UK_BBFC_15.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:18) | String.Contains(Container.ListItem.MPAA,United Kingdom:18) | String.IsEqual(Container.ListItem.MPAA,UK:18)">badges/mpaa/UK_BBFC_18.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,UK:R18) | String.Contains(Container.ListItem.MPAA,United Kingdom:R18) | String.IsEqual(Container.ListItem.MPAA,UK:R18)">badges/mpaa/UK_BBFC_R18.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Germany:16) | String.Contains(Container.ListItem.MPAA,ab 16) | String.Contains(Container.ListItem.MPAA,FSK 16)">badges/mpaa/Germany_16.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Germany:0) | String.Contains(Container.ListItem.MPAA,ab 0) | String.Contains(Container.ListItem.MPAA,FSK 0)">badges/mpaa/Germany_0.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Germany:6) | String.Contains(Container.ListItem.MPAA,ab 6) | String.Contains(Container.ListItem.MPAA,FSK 6)">badges/mpaa/Germany_6.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Germany:12) | String.Contains(Container.ListItem.MPAA,ab 12) | String.Contains(Container.ListItem.MPAA,FSK 12)">badges/mpaa/Germany_12.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Germany:18) | String.Contains(Container.ListItem.MPAA,ab 18) | String.Contains(Container.ListItem.MPAA,FSK 18)">badges/mpaa/Germany_18.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Germany) | String.Contains(Container.ListItem.MPAA,FSK) | String.Contains(Container.ListItem.MPAA,o.A)">badges/mpaa/Germany_0.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,France:U) | String.Contains(Container.ListItem.MPAA,Tous publics)">badges/mpaa/France_-10.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,France:10) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 10 ans)">badges/mpaa/France_-10.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,France:12) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 12 ans)">badges/mpaa/France_-12.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,France:16) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 16 ans)">badges/mpaa/France_-16.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,France:18) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 18 ans)">badges/mpaa/France_-18.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Brazil:L) | String.Contains(Container.ListItem.MPAA,Brazil:Livre) | String.Contains(Container.ListItem.MPAA,Livre) | String.IsEqual(Container.ListItem.MPAA,Brazil:L) | String.IsEqual(Container.ListItem.MPAA,Brazil:Livre) | String.IsEqual(Container.ListItem.MPAA,classificação L) | String.IsEqual(Container.ListItem.MPAA,classificação Livre)">badges/mpaa/Brazil_L.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Brazil:10) | String.Contains(Container.ListItem.MPAA,10 anos) | String.IsEqual(Container.ListItem.MPAA,Brazil:10) | String.IsEqual(Container.ListItem.MPAA,classificação 10)">badges/mpaa/Brazil_10.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Brazil:12) | String.Contains(Container.ListItem.MPAA,12 anos) | String.IsEqual(Container.ListItem.MPAA,Brazil:12) | String.IsEqual(Container.ListItem.MPAA,classificação 12)">badges/mpaa/Brazil_12.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Brazil:14) | String.Contains(Container.ListItem.MPAA,14 anos) | String.IsEqual(Container.ListItem.MPAA,Brazil:14) | String.IsEqual(Container.ListItem.MPAA,classificação 14)">badges/mpaa/Brazil_14.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Brazil:16) | String.Contains(Container.ListItem.MPAA,16 anos) | String.IsEqual(Container.ListItem.MPAA,Brazil:16) | String.IsEqual(Container.ListItem.MPAA,classificação 16)">badges/mpaa/Brazil_16.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Brazil:18) | String.Contains(Container.ListItem.MPAA,18 anos) | String.IsEqual(Container.ListItem.MPAA,Brazil:18) | String.IsEqual(Container.ListItem.MPAA,classificação 18)">badges/mpaa/Brazil_18.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Australia:MA15)">badges/mpaa/australia_MA15.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Australia:R18)">badges/mpaa/australia_R18.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Australia:M)">badges/mpaa/Australia_M.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Australia:PG)">badges/mpaa/Australia_PG.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Australia:G)">badges/mpaa/Australia_G.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,Australia:E)">badges/mpaa/Australia_E.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,NL-AL) | String.Contains(Container.ListItem.MPAA,Netherlands:AL)">badges/mpaa/NL_AL.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,NL-6) | String.Contains(Container.ListItem.MPAA,Netherlands:6)">badges/mpaa/NL_6.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,NL-9) | String.Contains(Container.ListItem.MPAA,Netherlands:9)">badges/mpaa/NL_9.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,NL-12) | String.Contains(Container.ListItem.MPAA,Netherlands:12)">badges/mpaa/NL_12.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,NL-16) | String.Contains(Container.ListItem.MPAA,Netherlands:16)">badges/mpaa/NL_16.png</value>
        <value condition="String.Contains(Container.ListItem.MPAA,NL-18) | String.Contains(Container.ListItem.MPAA,Netherlands:18)">badges/mpaa/NL_18.png</value>
		<value condition="String.IsEmpty(Container.ListItem.MPAA)">badges/mpaa/NR.png</value>
        <value>$INFO[Container.ListItem.MPAA,badges/mpaa,.png]</value>
	</variable>

	<variable name="ShelfInfoTotalSeasons">
		<value condition="!String.IsEmpty(Container.ListItem.Property(TotalSeasons))">$INFO[Container.ListItem.Property(TotalSeasons)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Season)">$INFO[Container.ListItem.Season]</value>
	</variable>

	<variable name="ShelfInfoTotalEpisodes">
		<value condition="!String.IsEmpty(Container.ListItem.Property(TotalEpisodes))">$INFO[Container.ListItem.Property(TotalEpisodes)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Episode)">$INFO[Container.ListItem.Episode]</value>
	</variable>

	<variable name="ShelfInfoSeasonEpisodeLabel">
        <value condition="Integer.IsLess(Container.ListItem.Episode,10) + Integer.IsLess(Container.ListItem.Season,10)">$INFO[Container.ListItem.Season,s0,]$INFO[Container.ListItem.Episode,e0,]</value>
        <value condition="Integer.IsLess(Container.ListItem.Episode,10) + !Integer.IsLess(Container.ListItem.Season,10)">$INFO[Container.ListItem.Season,s,]$INFO[Container.ListItem.Episode,e0,]</value>
        <value condition="!Integer.IsLess(Container.ListItem.Episode,10) + Integer.IsLess(Container.ListItem.Season,10)">$INFO[Container.ListItem.Season,s0,]$INFO[Container.ListItem.Episode,e,]</value>
        <value condition="!Integer.IsLess(Container.ListItem.Episode,10) + !Integer.IsLess(Container.ListItem.Season,10)">$INFO[Container.ListItem.Season,s,]$INFO[Container.ListItem.Episode,e,]</value>
    </variable>

	<variable name="ShelfInfoNextAiredSeasonEpisodeLabel">
        <value condition="Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),10) + Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),10)">$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),s0,]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),e0,]</value>
        <value condition="Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),10) + !Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),10)">$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),s,]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),e0,]</value>
        <value condition="!Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),10) + Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),10)">$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),s0,]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),e,]</value>
        <value condition="!Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),10) + !Integer.IsLess(Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),10)">$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Season),s,]$INFO[Window(Home).Property(TMDbHelper.ListItem.Next_Aired.Episode),e,]</value>
    </variable>

	<variable name="ShelfInfoSeasonsLabel">
		<value condition="String.IsEqual(Container.ListItem.Property(TotalSeasons),1) | String.IsEqual(Container.ListItem.Season,1)">$LOCALIZE[20373]</value>
		<value>$LOCALIZE[33054]</value>
	</variable>

	<variable name="ShelfInfoEpisodesLabel">
		<value condition="String.IsEqual(Container.ListItem.Property(TotalEpisodes),1) | String.IsEqual(Container.ListItem.Episode,1)" >$LOCALIZE[20359]</value>
		<value>$LOCALIZE[20360]</value>
	</variable>

	<variable name="ShelfInfoLogo">
        <value condition="String.IsEqual(Container.ListItem.DBType,movie) | String.IsEqual(Container.ListItem.DBType,tvshow) | String.IsEqual(Container.ListItem.DBType,musicvideo) | String.IsEqual(Container.ListItem.DBType,artist)">$INFO[Container.ListItem.Art(clearlogo)]</value>
        <value condition="String.IsEqual(Container.ListItem.DBType,episode)">$INFO[Container.ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="[String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)] + !String.IsEmpty(Container.ListItem.Art(artist.clearlogo))">$INFO[Container.ListItem.Art(artist.clearlogo)]</value>
		<value condition="[String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)] + String.IsEmpty(Container.ListItem.Art(artist.clearlogo))">$INFO[Container.ListItem.Art(albumartist.clearlogo)]</value>
    </variable>

	<variable name="ShelfInfoPlot">
		<value condition="!String.IsEmpty(Container.ListItem.AddonName)">$INFO[Container.ListItem.AddonDescription]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Property(Album_Description))">$INFO[Container.ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Property(Artist_Description))">$INFO[Container.ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(Container.ListItem.PlotOutline) + String.IsEmpty(Container.ListItem.Plot)">$INFO[Container.ListItem.PlotOutline]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Comment)">$INFO[Container.ListItem.Comment]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Property(recommendedplot))">$INFO[Container.ListItem.Property(recommendedplot)]</value>
		<value>$INFO[Container.ListItem.Plot]</value>
	</variable>

	<expression name="showTextTitle">[String.IsEmpty(Container.ListItem.Art(clearlogo)) + String.IsEmpty(Container.ListItem.Art(tvshow.clearlogo))] | !Skin.HasSetting(VerticalHome)</expression>

	<!-- Positioning for widget container when shelves info is enabled in horizontal menu -->
	<include name="ShelfInfoWidgetPositioningHorz">
		<top>534</top>
		<left>32</left>
		<right>0</right>
		<height>315</height>
	</include>
	<!-- Positioning for widget container when shelves info is enabled in vertical menu -->
	<include name="ShelfInfoWidgetPositioningVert">
		<top>594</top>
		<left>32</left>
		<right>0</right>
		<height>315</height>
	</include>

	<include name="ShelfInfoTopVert">
	    <top>-30</top>
	</include>
	<include name="ShelfInfoTopHorz">
	    <top>40</top>
	</include>

	<include name="ShelfInfoBackCoordsVert">
	    <top>-60</top>
		<height>670</height>
		<width>1500</width>
	</include>
	<include name="ShelfInfoBackCoordsVertIcon">
	    <top>-60</top>
		<height>650</height>
		<width>1800</width>
	</include>
	<include name="ShelfInfoBackCoordsVertHideFocus">
	    <top>-60</top>
		<height>650</height>
		<width>1920</width>
	</include>
	<include name="ShelfInfoBackCoordsHorz">
	    <top>-30</top>
		<height>520</height>
		<width>1940</width>
	</include>

	<include name="ShelfInfoTitleTopVert">
	    <top>-60</top>
	</include>
	<include name="ShelfInfoTitleTopHorz">
	    <top>0</top>
	</include>

	<include name="ShelfInfoPlotHeightVert">
	    <height>162</height>
	</include>
	<include name="ShelfInfoPlotHeightHorz">
	    <height>122</height>
	</include>

	<include name="ShelfInfoMusicPlotVert">
	    <height>238</height>
	</include>
	<include name="ShelfInfoMusicPlotHorz">
	    <height>122</height>
	</include>

	<include name="ShelfInfoMediaTopVert">
	    <top>495</top>
	</include>
	<include name="ShelfInfoMediaTopHorz">
	    <top>380</top>
	</include>

	<include name="ShelfInfoTVTopVert">
	    <top>430</top>
	</include>
	<include name="ShelfInfoTVTopHorz">
	    <top>350</top>
	</include>

	<include name="ShelfInfoGroupCoordsVert">
	    <top>-12</top>
		<height>622</height>
	</include>
	<include name="ShelfInfoGroupCoordsHorz">
	    <top>5</top>
		<height>412</height>
	</include>

	<include name="ShelfInfoCert">
	    <param name="leftUSA">620</param>
		<param name="leftNonUSA">650</param>
		<param name="widthUSA">133</param>
        <param name="topUSA">985</param>
        <param name="topNonUSA">995</param>
		<param name="certsource">Container.ListItem.MPAA</param>
		<param name="certvar">$VAR[ShelfInfoCertFlag]</param>
	    <definition>
		    <control type="image" description="Certification flag USA">
			    <left>$PARAM[leftUSA]</left>
			    <top>$PARAM[topUSA]</top>
			    <height>90</height>
                <width>$PARAM[widthUSA]</width>
                <aspectratio>keep</aspectratio>
                <align>center</align>
                <texture fallback="badges/mpaa/NR.png">$PARAM[certvar]</texture>
			    <visible>!String.Contains($PARAM[certsource],Brazil) + !String.Contains($PARAM[certsource],UK) + !String.Contains($PARAM[certsource],United Kingdom) + !String.Contains($PARAM[certsource],classificação) + !String.Contains($PARAM[certsource],France) + !String.Contains($PARAM[certsource],Germany) + !String.Contains($PARAM[certsource],Australia) + !String.Contains($PARAM[certsource],Netherlands) + !String.Contains($PARAM[certsource],NL) + !String.IsEmpty($PARAM[certsource])</visible>
            </control>
		    <control type="group">
			    <left>$PARAM[leftNonUSA]</left>
			    <top>$PARAM[topNonUSA]</top>
			    <control type="image" description="Certification flag Non USA">
    			    <height>55</height>
                    <width>55</width>
                    <aspectratio>keep</aspectratio>
                    <align>center</align>
                    <texture fallback="badges/mpaa/NR.png">$PARAM[certvar]</texture>
			   	    <visible>!String.IsEmpty($PARAM[certsource]) + [String.Contains($PARAM[certsource],Brazil) | String.Contains($PARAM[certsource],classificação) | String.Contains($PARAM[certsource],France) | String.Contains($PARAM[certsource],Germany) | String.Contains($PARAM[certsource],Australia) | String.Contains($PARAM[certsource],Netherlands) | String.Contains($PARAM[certsource],NL)]</visible>
                </control>
    		    <control type="image" description="Certification flag UK">
	    		    <height>65</height>
                    <width>55</width>
                    <aspectratio>keep</aspectratio>
                    <align>center</align>
                    <texture fallback="badges/mpaa/NR.png">$PARAM[certvar]</texture>
			        <visible>!String.IsEmpty($PARAM[certsource]) + [String.Contains($PARAM[certsource],UK) | String.Contains($PARAM[certsource],United Kingdom)]</visible>
                </control>
			</control>
        </definition>
    </include>


	<include name="ShelfInfoContent">
	    <param name="id"></param>
		<param name="left">20</param>
		<param name="width"></param>
		<definition>
		<control type="grouplist">
			<left>$PARAM[left]</left>
			<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoGroupCoordsVert</include>
			<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoGroupCoordsHorz</include>
			<width>$PARAM[width]</width>
			<itemgap>8</itemgap>
			<usecontrolcoords>true</usecontrolcoords>
			<!-- Logo -->
			<control type="image">
				<width>232</width>
				<height>95</height>
				<aspectratio align="left" aligny="center">keep</aspectratio>
				<texture background="true">$VAR[ShelfInfoLogo]</texture>
				<visible>Skin.HasSetting(VerticalHome)</visible>
			</control>
			<!-- Title if no logo -->
			<control type="label">
				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTitleTopVert</include>
			    <include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTitleTopHorz</include>
				<width>$PARAM[width]</width>
				<height>60</height>
				<font>font30_title</font>
				<aligny>center</aligny>
				<label>$VAR[ShelfInfoTitle]</label>
				<textcolor>$VAR[HighlightColor]</textcolor>
				<visible>$EXP[showTextTitle]</visible>
				<visible>![String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>60</height>
				<font>font30_title</font>
				<aligny>center</aligny>
				<label>$VAR[ShelfInfoTitle]</label>
				<textcolor>$VAR[HighlightColor]</textcolor>
				<visible>[String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>50</height>
				<font>font30_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$INFO[Container.ListItem.Title][/COLOR]</label>
				<visible>!String.IsEmpty(Container.ListItem.Title) + !String.IsEmpty(Container.ListItem.Art(clearlogo))</visible>
				<visible>String.IsEqual(Container.ListItem.DBType,musicvideo)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<height>5</height>
				<font>font12_title</font>
				<label></label>
			</control>

			<!-- System items -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>45</height>
				<font>font20_title</font>
				<label>$INFO[Container.ListItem.Label2]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Label3))</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>45</height>
				<font>font20_title</font>
				<label>$INFO[Container.ListItem.Property(Label3)]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Label3))</visible>
				<scroll>true</scroll>
			</control>

			<!-- Addon items -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>45</height>
				<font>font12_title</font>
				<label>[I]$INFO[Container.ListItem.AddonSummary][/I]</label>
				<visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonSummary)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[24051]: [/COLOR]$INFO[Container.ListItem.AddonVersion]</label>
				<visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonVersion)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[21863]: [/COLOR]$INFO[Container.ListItem.AddonCreator]</label>
				<visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonCreator)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[146]: [/COLOR]$INFO[Container.ListItem.AddonType]</label>
				<visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonType)</visible>
				<scroll>true</scroll>
			</control>

			<!-- Person items -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32083]: [/COLOR]$VAR[TMDbPersonBorn]</label>
				<visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Born))</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32082]: [/COLOR]$VAR[TMDbPersonBirthday]</label>
				<visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Birthday))</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$VAR[AgeLabel]: [/COLOR]$VAR[TMDbPersonAge]</label>
				<visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Age))</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32085]: [/COLOR]$VAR[TMDbPersonDeathday]</label>
				<visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Deathday))</visible>
				<scroll>true</scroll>
			</control>

			<!-- Episode title and number -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>30</height>
				<font>font24_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20359]: [/COLOR]$VAR[ShelfInfoSeasonEpisodeLabel] - $INFO[Container.ListItem.Title]</label>
				<visible>!String.IsEmpty(Container.ListItem.Title) + String.IsEqual(Container.ListItem.DBType,episode)</visible>
				<scroll>true</scroll>
			</control>
			<!-- Director -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>30</height>
				<font>font12_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20339]: [/COLOR]$INFO[Container.ListItem.Director]</label>
				<visible>!String.IsEmpty(Container.ListItem.Director)</visible>
				<visible>![String.IsEqual(Container.ListItem.DBType,episode) + !Skin.HasSetting(VerticalHome)]</visible>
				<scroll>true</scroll>
			</control>
			<!-- Artist -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[557]: [/COLOR]$INFO[Container.ListItem.Artist]</label>
				<visible>!String.IsEmpty(Container.ListItem.Artist)</visible>
				<visible>[String.IsEqual(Container.ListItem.DBType,musicvideo) | String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[558]: [/COLOR]$INFO[Container.ListItem.Album]</label>
				<visible>!String.IsEmpty(Container.ListItem.Album) + String.IsEqual(Container.ListItem.DBType,song)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[180]: [/COLOR]$VAR[WidgetItemDurationVar]</label>
				<visible>!String.IsEmpty(Window(Home).Property(WidgetItemDuration)) + String.IsEqual(Container.ListItem.DBType,song)</visible>
				<scroll>true</scroll>
			</control>
			<!-- Genre -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>30</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Genre]</label>
				<visible>!String.IsEmpty(Container.ListItem.Genre) + ![String.IsEqual(Container.ListItem.DBType,artist) | String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
				<scroll>true</scroll>
			</control>
			<!-- Year -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[562]: [/COLOR]$INFO[Container.ListItem.Year]</label>
				<visible>!String.IsEmpty(Container.ListItem.Year)</visible>
				<visible>[String.IsEqual(Container.ListItem.DBType,musicvideo) | String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[176]: [/COLOR]$INFO[Container.ListItem.Property(Album_Style)]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Album_Style)) + String.IsEqual(Container.ListItem.DBType,album)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[21894]: [/COLOR]$INFO[Container.ListItem.Property(Artist_Formed)]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Artist_Formed)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[21898]: [/COLOR]$INFO[Container.ListItem.Property(Artist_YearsActive)]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Artist_YearsActive)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[176]: [/COLOR]$INFO[Container.ListItem.Property(Artist_Style)]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Artist_Style)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Property(Artist_Genre)]</label>
				<visible>!String.IsEmpty(Container.ListItem.Property(Artist_Genre)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				<scroll>true</scroll>
			</control>
			<control type="label">
				<width>$PARAM[width]</width>
				<height>38</height>
				<font>font13_title</font>
				<label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Genre]</label>
				<visible>!String.IsEmpty(Container.ListItem.Genre) + [String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
				<scroll>true</scroll>
			</control>
			<!-- Cast for movies and episodes, requires tmdb helper -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>30</height>
				<font>font12_title</font>
				<label>$VAR[ShelfInfoCast]</label>
				<visible>!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Cast.1.Name)) + [String.IsEqual(Container.ListItem.DBType,movie) | String.IsEqual(Container.ListItem.DBType,episode)]</visible>
				<scroll>true</scroll>
			</control>
			<!-- Details line -->
			<control type="label">
				<width>$PARAM[width]</width>
				<height>40</height>
				<font>font13_title</font>
				<label>$VAR[ShelfInfoDetails]</label>
				<visible>![String.IsEqual(Container.ListItem.DBType,artist) | String.IsEqual(Container.ListItem.DBType,album)]</visible>
			</control>
			<control type="label">
				<height>1</height>
				<font>font12_title</font>
				<label></label>
			</control>
			<!-- Plot -->
			<control type="textbox">
				<width>auto</width>
-				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoPlotHeightVert</include>
			    <include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoPlotHeightHorz</include>
				<font>InfoPlot</font>
				<align>justify</align>
				<label>$VAR[ShelfInfoPlot]</label>
				<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<visible>![String.IsEqual(Container.ListItem.DBType,artist) | [String.IsEqual(Container.ListItem.DBType,album) + String.IsEmpty(Container.ListItem.Property(Album_Style))]]</visible>
			</control>
			<control type="textbox">
				<width>auto</width>
-				<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoMusicPlotVert</include>
			    <include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoMusicPlotHorz</include>
				<font>InfoPlot</font>
				<align>justify</align>
				<label>$VAR[ShelfInfoPlot]</label>
				<autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<visible>[String.IsEqual(Container.ListItem.DBType,artist) | [String.IsEqual(Container.ListItem.DBType,album) + String.IsEmpty(Container.ListItem.Property(Album_Style))]]</visible>
			</control>
		</control>
		<!-- Media flags -->
		<control type="group">
		    <include condition="Skin.HasSetting(VerticalHome)">ShelfInfoMediaTopVert</include>
			<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoMediaTopHorz</include>
			<visible>String.IsEqual(Container.ListItem.DBType,movie) | String.IsEqual(Container.ListItem.DBType,episode) | String.IsEqual(Container.ListItem.DBType,musicvideo)  | String.IsEqual(Container.ListItem.DBType,video) | String.IsEqual(Container.ListItem.DBType,song)</visible>
		    <control type="group">
                <visible>!Skin.HasSetting(coloredflags)</visible>
	            <include>ContentFade</include>
		        <control type="grouplist">
		            <width>930</width>
		            <height>85</height>
		            <itemgap>20</itemgap>
		            <orientation>horizontal</orientation>
		            <align>left</align>
		            <include content="MediaFlagItems">
			            <param name="itemwidth">130</param>
		                <param name="itemheight">50</param>
			            <param name="diffuse">$VAR[LabelTextColor]</param>
		            </include>
		        </control>
		    </control>
		    <control type="group">
		        <visible>Skin.HasSetting(coloredflags)</visible>
		        <include>ContentFade</include>
		        <control type="grouplist">
		            <visible>![String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)]</visible>
		            <width>930</width>
		            <height>85</height>
		            <itemgap>20</itemgap>
		            <orientation>horizontal</orientation>
		            <align>left</align>
					<usecontrolcoords>true</usecontrolcoords>
		            <include content="MediaFlagItems">
			            <param name="itemwidth">95</param>
		                <param name="itemheight">75</param>
			            <param name="diffuse">$VAR[LabelTextColor]</param>
		            </include>
		        </control>
			    <control type="grouplist">
		            <visible>[String.Contains(Container.ListItem.Filename,hdr) | String.Contains(Container.ListItem.Filename,sdr)]</visible>
		            <width>930</width>
		            <height>85</height>
		            <itemgap>10</itemgap>
		            <orientation>horizontal</orientation>
		            <align>left</align>
					<usecontrolcoords>true</usecontrolcoords>
		            <include content="MediaFlagItems">
			            <param name="itemwidth">95</param>
		                <param name="itemheight">75</param>
			            <param name="diffuse">$VAR[LabelTextColor]</param>
		            </include>
		        </control>
		    </control>
		</control>
		<!-- Additional info for TV Shows: certification, network, seasons, episodes and unwatched episodes -->
		<control type="grouplist">
			<include condition="Skin.HasSetting(VerticalHome)">ShelfInfoTVTopVert</include>
			<include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoTVTopHorz</include>
			<left>0</left>
			<width>889</width>
			<height>90</height>
			<itemgap>20</itemgap>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>String.IsEqual(Container.ListItem.DBType,tvshow)</visible>
			<control type="group">
		        <visible>!String.IsEmpty(Container.ListItem.MPAA)</visible>
		        <include content="ShelfInfoCert">
                    <param name="leftUSA">0</param>
	                <param name="leftNonUSA">20</param>
                    <param name="widthUSA">120</param>
                    <param name="topUSA">0</param>
                    <param name="topNonUSA">15</param>
		    		<param name="certsource">Container.ListItem.MPAA</param>
		            <param name="certvar">$VAR[ShelfInfoCertFlag]</param>
			    </include>
            </control>
			<control type="group">
				<left>110</left>
				<width>120</width>
				<height>90</height>
				<top>10</top>
				<control type="image" id="99701" description="Studio">
			        <texture>$VAR[ShelfInfoStudios]</texture>
			        <width>120</width>
			        <height>74</height>
			        <aspectratio align="center" aligny="center">keep</aspectratio>
                    <visible>!String.IsEmpty(Container.ListItem.Studio)</visible>
                </control>
				<control type="label">
					<width>120</width>
					<align>center</align>
					<font>FanartTitleFont</font>
					<wrapmultiline>true</wrapmultiline>
					<label>$INFO[Container.ListItem.Studio]</label>
					<visible>String.IsEmpty(Control.GetLabel(99701))</visible>
				</control>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container.ListItem.DBType,tvshow) + ![[String.IsEmpty(Container.ListItem.Season) | String.IsEqual(Container.ListItem.Season,0)] + String.IsEmpty(Container.ListItem.Property(TotalSeasons))]</visible>
				<width>177</width>
				<control type="label">
					<top>2</top>
					<width>177</width>
					<height>60</height>
					<align>center</align>
					<label>[B]$VAR[ShelfInfoTotalSeasons][/B]</label>
					<font>MainLabelBigTitle</font>
					<wrapmultiline>true</wrapmultiline>
				</control>
				<control type="label">
					<top>52</top>
					<width>177</width>
					<height>30</height>
					<align>center</align>
					<label>[LOWERCASE]$VAR[ShelfInfoSeasonsLabel][/LOWERCASE]</label>
					<font>font12</font>
					<textcolor>$VAR[HighlightColor]</textcolor>
				</control>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container.ListItem.DBType,tvshow) + [!String.IsEmpty(Container.ListItem.Episode) | !String.IsEmpty(Container.ListItem.Property(TotalEpisodes))] + !String.IsEqual(Container.ListItem.Season,0)</visible>
				<width>177</width>
				<control type="label">
					<top>2</top>
					<width>177</width>
					<height>60</height>
					<align>center</align>
					<label>[B]$VAR[ShelfInfoTotalEpisodes][/B]</label>
					<font>MainLabelBigTitle</font>
					<wrapmultiline>true</wrapmultiline>
				</control>
				<control type="label">
					<top>52</top>
					<width>177</width>
					<height>30</height>
					<align>center</align>
					<label>[LOWERCASE]$VAR[ShelfInfoEpisodesLabel][/LOWERCASE]</label>
					<font>font12</font>
					<textcolor>$VAR[HighlightColor]</textcolor>
				</control>
			</control>
			<control type="group">
				<visible>String.IsEqual(Container.ListItem.DBType,tvshow) + ![String.IsEmpty(Container.ListItem.Property(UnwatchedEpisodes)) | String.IsEqual(Container.ListItem.Season,0)]</visible>
				<width>177</width>
				<control type="label">
					<top>2</top>
					<width>177</width>
					<height>60</height>
					<align>center</align>
					<label>[B]$INFO[Container.ListItem.Property(UnwatchedEpisodes)][/B]</label>
					<font>MainLabelBigTitle</font>
					<wrapmultiline>true</wrapmultiline>
				</control>
				<control type="label">
					<top>52</top>
					<width>177</width>
					<height>30</height>
					<align>center</align>
					<label>[LOWERCASE]$LOCALIZE[16101][/LOWERCASE]</label>
					<font>font12</font>
					<textcolor>$VAR[HighlightColor]</textcolor>
				</control>
			</control>
		</control>
		</definition>
	</include>

	<include name="ShelfInfoContentTwoShelves">
	    <param name="id"></param>
		<param name="left"></param>
		<param name="width"></param>
		<param name="isTopShelf">false</param>
		<definition>
		    <control type="grouplist">
			    <left>$PARAM[left]</left>
			    <include condition="Skin.HasSetting(VerticalHome)">ShelfInfoGroupCoordsVert</include>
			    <include condition="!Skin.HasSetting(VerticalHome)">ShelfInfoGroupCoordsHorz</include>
			    <width>$PARAM[width]</width>
			    <itemgap>8</itemgap>
			    <usecontrolcoords>true</usecontrolcoords>

			    <!-- Spacer -->
			    <control type="label">
				    <height>10</height>
				    <font>font12_title</font>
				    <label></label>
				    <visible>!String.IsEmpty(Container.ListItem.Title) | !String.IsEmpty(Container.ListItem.Property(recommendedtitle)) | [String.IsEmpty(Container.ListItem.Title) + !String.IsEmpty(Container.ListItem.Property(Outlook))]</visible>
			    </control>
			    <!-- Episode title and number -->
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>30</height>
				    <font>font24_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$INFO[Container.ListItem.TVShowTitle][/COLOR] - $VAR[ShelfInfoSeasonEpisodeLabel] - $INFO[Container.ListItem.Title]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Title) + String.IsEqual(Container.ListItem.DBType,episode)</visible>
				    <scroll>true</scroll>
			    </control>
				<!-- Recommended Episode title and number -->
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>30</height>
				    <font>font24_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$INFO[Container.ListItem.Property(recommendedtvshowtitle)][/COLOR] - $INFO[Container.ListItem.Property(recommendedepisodeno)] - $INFO[Container.ListItem.Property(recommendedtitle)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(recommendedtitle))</visible>
				    <scroll>true</scroll>
			    </control>
				<!-- Song or music video title -->
				<control type="label">
				    <height>30</height>
				    <font>font24_title</font>
				    <label>$INFO[Container.ListItem.Title]</label>
					<textcolor>$VAR[HighlightColor]</textcolor>
				    <visible>!String.IsEmpty(Container.ListItem.Title) + !String.IsEqual(Container.ListItem.DBType,episode)</visible>
			    </control>
				<!-- Weather item label -->
				<control type="label">
				    <height>60</height>
				    <font>font24_title</font>
				    <label>$INFO[Container.ListItem.Label]</label>
				    <visible>String.IsEmpty(Container.ListItem.Title) + !String.IsEmpty(Container.ListItem.Property(Outlook))</visible>
			    </control>
				<!-- System item label -->
				<control type="label">
				    <height>60</height>
				    <font>font24_title</font>
				    <label>$INFO[Container.ListItem.Label]</label>
					<textcolor>$VAR[HighlightColor]</textcolor>
				    <visible>String.IsEmpty(Container.ListItem.Title) + !String.IsEmpty(Container.ListItem.Property(Label3))</visible>
			    </control>
				<!-- Spacer -->
			    <control type="label">
				    <height>5</height>
				    <font>font12_title</font>
				    <label></label>
			    </control>

				<!-- System items -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>45</height>
				    <font>font20_title</font>
				    <label>$INFO[Container.ListItem.Label2]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Label3))</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>45</height>
				    <font>font20_title</font>
				    <label>$INFO[Container.ListItem.Property(Label3)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Label3))</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Weather items -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[33030]: [/COLOR]$INFO[Container.ListItem.Property(Outlook)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Outlook))</visible>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[402]: [/COLOR]$INFO[Container.ListItem.Property(FeelsLike)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Outlook)) + !String.IsEmpty(Container.ListItem.Property(FeelsLike))</visible>
				    <scroll>true</scroll>
			    </control>
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[406]: [/COLOR]$INFO[Container.ListItem.Property(Humidity)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Outlook)) + !String.IsEmpty(Container.ListItem.Property(Humidity))</visible>
				    <scroll>true</scroll>
			    </control>
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32467]: [/COLOR]$INFO[Container.ListItem.Property(Cloudiness)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Outlook)) + !String.IsEmpty(Container.ListItem.Property(Cloudiness))</visible>
				    <scroll>true</scroll>
			    </control>
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32468]: [/COLOR]$INFO[Container.ListItem.Property(Probability)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Outlook)) + !String.IsEmpty(Container.ListItem.Property(Probability))</visible>
				    <scroll>true</scroll>
			    </control>
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32468]: [/COLOR]$INFO[Container.ListItem.Property(Precipitation)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Outlook)) + String.IsEmpty(Container.ListItem.Property(Probability)) + !String.IsEmpty(Container.ListItem.Property(Precipitation))</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Person items -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32083]: [/COLOR]$VAR[TMDbPersonBorn]</label>
				    <visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Born))</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[32082]: [/COLOR]$VAR[TMDbPersonBirthday]</label>
				    <visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Birthday))</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$VAR[AgeLabel]: [/COLOR]$VAR[TMDbPersonAge]</label>
				    <visible>String.Contains(Container.ListItem.FolderPath,type=person) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Age))</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Addon items -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>45</height>
				    <font>font12_title</font>
				    <label>[I]$INFO[Container.ListItem.AddonSummary][/I]</label>
				    <visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonSummary)</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[24051] [/COLOR]$INFO[Container.ListItem.AddonVersion]</label>
				    <visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonVersion)</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[21863]: [/COLOR]$INFO[Container.ListItem.AddonCreator]</label>
				    <visible>!String.IsEmpty(Container.ListItem.AddonName) + !String.IsEmpty(Container.ListItem.AddonCreator)</visible>
				    <scroll>true</scroll>
			    </control>

			    <!-- Director -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>30</height>
				    <font>font12_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[20339]: [/COLOR]$INFO[Container.ListItem.Director]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Director)</visible>
				    <visible>![String.IsEqual(Container.ListItem.DBType,episode) + !Skin.HasSetting(VerticalHome)]</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Artist -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[557]: [/COLOR]$INFO[Container.ListItem.Artist]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Artist)</visible>
				    <visible>[String.IsEqual(Container.ListItem.DBType,musicvideo) | String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Song items -->
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[558]: [/COLOR]$INFO[Container.ListItem.Album] ($INFO[ListItem.Year])</label>
				    <visible>!String.IsEmpty(Container.ListItem.Album) + String.IsEqual(Container.ListItem.DBType,song)</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[180]: [/COLOR]$VAR[WidgetItemDurationVar]</label>
				    <visible>!String.IsEmpty(Window(Home).Property(WidgetItemDuration)) + String.IsEqual(Container.ListItem.DBType,song)</visible>
				    <scroll>true</scroll>
			    </control>

			    <!-- Video Genre -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>30</height>
				    <font>font12_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Genre]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Genre) + ![String.IsEqual(Container.ListItem.DBType,episode) | String.IsEqual(Container.ListItem.DBType,artist) | String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Video Genre -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>30</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Genre]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Genre) + String.IsEqual(Container.ListItem.DBType,episode) + String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</visible>
				    <scroll>true</scroll>
			    </control>

				<!-- Year -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[562]: [/COLOR]$INFO[Container.ListItem.Year]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Year)</visible>
				    <visible>[String.IsEqual(Container.ListItem.DBType,musicvideo) | String.IsEqual(Container.ListItem.DBType,album)]</visible>
			    </control>

				<!-- Album items -->
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[176]: [/COLOR]$INFO[Container.ListItem.Property(Album_Style)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Album_Style)) + String.IsEqual(Container.ListItem.DBType,album)</visible>
				    <scroll>true</scroll>
			    </control>
				<!-- Music Genre -->
				<control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Genre]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Genre) + [String.IsEqual(Container.ListItem.DBType,album) | String.IsEqual(Container.ListItem.DBType,song)]</visible>
				    <scroll>true</scroll>
			    </control>

			    <!-- Artist items -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[21894]: [/COLOR]$INFO[Container.ListItem.Property(Artist_Formed)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Artist_Formed)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[21898]: [/COLOR]$INFO[Container.ListItem.Property(Artist_YearsActive)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Artist_YearsActive)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[176]: [/COLOR]$INFO[Container.ListItem.Property(Artist_Style)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Artist_Style)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				    <scroll>true</scroll>
			    </control>
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>38</height>
				    <font>font13_title</font>
				    <label>[COLOR=$VAR[HighlightColor]]$LOCALIZE[515]: [/COLOR]$INFO[Container.ListItem.Property(Artist_Genre)]</label>
				    <visible>!String.IsEmpty(Container.ListItem.Property(Artist_Genre)) + String.IsEqual(Container.ListItem.DBType,artist)</visible>
				    <scroll>true</scroll>
			    </control>

			    <!-- Cast for movies and episodes, requires tmdb helper -->
			    <control type="label">
    				<width>$PARAM[width]</width>
				    <height>30</height>
				    <font>font12_title</font>
				    <label>$VAR[ShelfInfoCast]</label>
				    <visible>!String.IsEmpty(Window(home).Property(TMDbHelper.ListItem.Cast.1.Name)) + [String.IsEqual(Container.ListItem.DBType,movie) | String.IsEqual(Container.ListItem.DBType,episode)]</visible>
				    <scroll>true</scroll>
			    </control>

			    <!-- Details line -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>40</height>
				    <font>font12_title</font>
				    <label>$VAR[ShelfInfoDetails]</label>
				    <visible>![String.IsEqual(Container.ListItem.DBType,artist) | String.IsEqual(Container.ListItem.DBType,album) | String.Contains(Container.ListItem.FolderPath,type=person)]</visible>
			    </control>

				<!-- Next Aired -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>40</height>
				    <font>font13_title</font>
				    <label>$VAR[ShelfInfoNextAiredDetails]</label>
				    <visible>String.IsEqual(Container.ListItem.DBType,episode) + !String.IsEmpty(Window(Home).Property(TMDbHelper.ListItem.Next_Aired))</visible>
			    </control>

			    <!-- Additional line for tv shows -->
			    <control type="label">
				    <width>$PARAM[width]</width>
				    <height>40</height>
				    <font>font13_title</font>
				    <label>$VAR[ShelfInfoTVShowDetails]</label>
				    <visible>String.IsEqual(Container.ListItem.DBType,tvshow)</visible>
			    </control>
			    <control type="label">
				    <height>5</height>
				    <font>font12_title</font>
				    <label></label>
			    </control>

			    <!-- Plot -->
			    <!-- Slightly larger plot for tv shows -->
			    <control type="textbox">
				    <width>auto</width>
    				<height>160</height>
				    <font>InfoPlot</font>
				    <align>justify</align>
				    <label>$VAR[ShelfInfoPlot]</label>
				    <autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				    <visible>String.IsEqual(Container.ListItem.DBType,tvshow)</visible>
			    </control>
			    <control type="textbox">
				    <width>auto</width>
        			<height>126</height>
		    		<font>InfoPlot</font>
			    	<align>justify</align>
				    <label>$VAR[ShelfInfoPlot]</label>
				    <autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				    <visible>!String.IsEqual(Container.ListItem.DBType,tvshow) + !String.IsEqual(Container.ListItem.DBType,musicvideo)</visible>
			    </control>
				<control type="textbox">
				    <width>auto</width>
        			<height>126</height>
		    		<font>InfoPlot</font>
			    	<align>justify</align>
				    <label>$VAR[ShelfInfoPlot]</label>
				    <autoscroll delay="5000" time="4000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				    <visible>String.IsEqual(Container.ListItem.DBType,musicvideo)</visible>
			    </control>
		    </control>
		</definition>
	</include>

</includes>