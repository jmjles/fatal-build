<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<variable name="DialogFullScreenPlot">
        <value condition="Window.IsActive(custom_1123_pausedoverlay.xml) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="Window.IsActive(custom_1123_pausedoverlay.xml) + !String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
        <value condition="Skin.HasSetting(DirectSeekInInfo) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="Skin.HasSetting(DirectSeekInInfo) + !String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
        <value condition="Skin.HasSetting(DirectSeekInInfo) + Videoplayer.content(livetv) + !String.IsEmpty(VideoPlayer.NextPlot)">$INFO[VideoPlayer.NextPlot]</value>
        <value condition="Skin.HasSetting(DirectSeekInInfo) + Videoplayer.content(livetv) + !String.IsEmpty(VideoPlayer.NextPlotOutline)">$INFO[VideoPlayer.NextPlotOutline]</value>
		<value condition="!Skin.HasSetting(DirectSeekInInfo) + Control.HasFocus(601) + !String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="!Skin.HasSetting(DirectSeekInInfo) + Control.HasFocus(601) + !String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
        <value condition="!Skin.HasSetting(DirectSeekInInfo) + Control.HasFocus(602) + !String.IsEmpty(VideoPlayer.NextPlot)">$INFO[VideoPlayer.NextPlot]</value>
        <value condition="!Skin.HasSetting(DirectSeekInInfo) + Control.HasFocus(602) + !String.IsEmpty(VideoPlayer.NextPlotOutline)">$INFO[VideoPlayer.NextPlotOutline]</value>
        <value condition="!Skin.HasSetting(DirectSeekInInfo) + Control.HasFocus(603)">$INFO[VideoPlayer.CastAndRole]</value>
        <value condition="!Skin.HasSetting(DirectSeekInInfo) + Control.HasFocus(604)">$INFO[PVR.ActStreamClient,[B]$LOCALIZE[19012]:[/B] ][CR]$INFO[PVR.ActStreamSignal,[B]$LOCALIZE[19008]:[/B] ][CR]$INFO[PVR.ActStreamSNR,[B]$LOCALIZE[19009]:[/B] ]</value>
    </variable>

    <variable name="DialogFullScreenBtn601">
        <value condition="Videoplayer.Content(livetv)">$LOCALIZE[19030]</value>
        <value>$LOCALIZE[207]</value>
    </variable>

    <variable name="FullScreenTitle">
        <value condition="Player.HasAudio">$INFO[MusicPlayer.Artist,, - ]$INFO[MusicPlayer.Album,, - ]$INFO[MusicPlayer.TrackNumber,,: ][B]$INFO[Player.Title][/B]</value>
		<value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
		<value condition="!Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + Control.HasFocus(601) + String.IsEmpty(VideoPlayer.Season) + String.IsEmpty(VideoPlayer.Episode)">$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ] ($INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime])</value>
		<value condition="!Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + Control.HasFocus(601) + ![String.IsEmpty(VideoPlayer.Season) + String.IsEmpty(VideoPlayer.Episode)] + String.IsEmpty(VideoPlayer.EpisodeName)">$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ] - [I]$VAR[PlayerSeasonEpisodeLabel][/I] ($INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime])</value>
		<value condition="!Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + Control.HasFocus(601) + ![String.IsEmpty(VideoPlayer.Season) + String.IsEmpty(VideoPlayer.Episode)] + !String.IsEmpty(VideoPlayer.EpisodeName)">$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ] - [I]$VAR[PlayerSeasonEpisodeLabel]: $INFO[VideoPlayer.EpisodeName][/I] ($INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime])</value>
        <value condition="!Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + Control.HasFocus(602)" >$INFO[VideoPlayer.NextTitle,$LOCALIZE[19031]: ]</value>
		<value condition="Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + String.IsEmpty(VideoPlayer.Season) + String.IsEmpty(VideoPlayer.Episode)">$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ]</value>
		<value condition="Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + ![String.IsEmpty(VideoPlayer.Season) + String.IsEmpty(VideoPlayer.Episode)] + String.IsEmpty(VideoPlayer.EpisodeName)">$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ] - [I]$VAR[PlayerSeasonEpisodeLabel][/I]</value>
		<value condition="Skin.HasSetting(DirectSeekInInfo) + VideoPlayer.Content(livetv) + ![String.IsEmpty(VideoPlayer.Season) + String.IsEmpty(VideoPlayer.Episode)] + !String.IsEmpty(VideoPlayer.EpisodeName)">$INFO[VideoPlayer.Title,$LOCALIZE[19030]: ] - [I]$VAR[PlayerSeasonEpisodeLabel]: $INFO[VideoPlayer.EpisodeName][/I]</value>
        <value condition="VideoPlayer.Content(Episodes)">[B]$INFO[VideoPlayer.TVShowTitle][/B][COLOR=$VAR[HighlightColor]]  •  [/COLOR]$INFO[VideoPlayer.Season,$LOCALIZE[31954],]$INFO[VideoPlayer.Episode,$LOCALIZE[31973],][COLOR=$VAR[HighlightColor]]  •  [/COLOR][B]$INFO[VideoPlayer.Title][/B]</value>
        <value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist,, - ]$INFO[VideoPlayer.Album,, - ]$INFO[VideoPlayer.Title]</value>
        <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
    </variable>

    <variable name="VideoFullScreenPlot">
        <value condition="!String.IsEmpty(VideoPlayer.Plot)">$INFO[VideoPlayer.Plot]</value>
        <value condition="!String.IsEmpty(VideoPlayer.PlotOutline)">$INFO[VideoPlayer.PlotOutline]</value>
    </variable>

    <variable name="VideoTopHeading">
        <value condition="VideoPlayer.Content(Movies)">$INFO[VideoPlayer.Studio]</value>
        <value condition="VideoPlayer.Content(Episodes)">$INFO[VideoPlayer.TVShowTitle]</value>
        <value condition="VideoPlayer.Content(MusicVideos)">$INFO[VideoPlayer.Artist] $INFO[VideoPlayer.Album, - ]</value>
        <value condition="VideoPlayer.Content(livetv)">[COLOR=$VAR[HighlightColor]]$INFO[VideoPlayer.ChannelNumberLabel][/COLOR] $INFO[VideoPlayer.ChannelName,  •  ,]$INFO[VideoPlayer.ChannelGroup,  •  (,)]</value>
    </variable>

    <variable name="VideoBottomHeading">
        <value condition="VideoPlayer.Content(Movies)">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20339]:[/COLOR] $INFO[VideoPlayer.Director]</value>
        <value condition="VideoPlayer.Content(Episodes) + String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Season.Episode))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20373]:[/COLOR] $INFO[VideoPlayer.Season] • [COLOR=$VAR[HighlightColor]]$LOCALIZE[20359]:[/COLOR] $INFO[VideoPlayer.Episode]</value>
		<value condition="VideoPlayer.Content(Episodes) + !String.IsEmpty(Window(Home).Property(TMDBHelper.ListItem.Season.Episode))">[COLOR=$VAR[HighlightColor]]$LOCALIZE[20373]:[/COLOR] $INFO[VideoPlayer.Season] • [COLOR=$VAR[HighlightColor]]$LOCALIZE[20359]:[/COLOR] $INFO[VideoPlayer.Episode] ($LOCALIZE[1443] $INFO[Window(Home).Property(TMDbHelper.ListItem.Season.Episode)])</value>
        <value condition="VideoPlayer.Content(livetv) + PVR.IsTimeShift">[COLOR=$VAR[HighlightColor]]$INFO[VideoPlayer.StartTime] - $INFO[VideoPlayer.EndTime][/COLOR]</value>
		<value condition="VideoPlayer.Content(livetv) + !PVR.IsTimeShift">[COLOR=$VAR[HighlightColor]]$LOCALIZE[19031]:[/COLOR] $INFO[VideoPlayer.NextTitle]</value>
    </variable>

    <variable name="VideoPlayerTitle">
        <value condition="Player.HasAudio">[B]$INFO[MusicPlayer.TrackNumber,,: ]$INFO[Player.Title][/B]</value>
		<value condition="VideoPlayer.Content(Movies) + !Skin.HasSetting(UseCompactOSD)">$INFO[VideoPlayer.Title,[B],[/B]]$INFO[VideoPlayer.Year, (,)]</value>
        <value>$INFO[VideoPlayer.Title,[B],[/B]]</value>
    </variable>

	<variable name="VideoPlayerSecondLine">
        <value condition="Player.HasAudio">$INFO[MusicPlayer.Artist][COLOR=$VAR[HighlightColor]]  •  [/COLOR]$INFO[MusicPlayer.Album][COLOR=$VAR[HighlightColor]]  •  [/COLOR]$INFO[MusicPlayer.Year]</value>
		<value condition="VideoPlayer.Content(Movies) + !String.IsEmpty(VideoPlayer.MPAA)">$INFO[VideoPlayer.Year][COLOR=$VAR[HighlightColor]]  •  [/COLOR]$INFO[VideoPlayer.MPAA]</value>
		<value condition="VideoPlayer.Content(Movies) + String.IsEmpty(VideoPlayer.MPAA)">$INFO[VideoPlayer.Year]</value>
        <value condition="VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.Premiered)">$INFO[VideoPlayer.TVShowtitle][COLOR=$VAR[HighlightColor]]  •  [/COLOR]S$INFO[VideoPlayer.Season]E$INFO[VideoPlayer.Episode][COLOR=$VAR[HighlightColor]]  •  [/COLOR]$INFO[VideoPlayer.Premiered]</value>
		<value condition="VideoPlayer.Content(episodes) + String.IsEmpty(VideoPlayer.Premiered)">$INFO[VideoPlayer.TVShowtitle][COLOR=$VAR[HighlightColor]]  •  [/COLOR]S$INFO[VideoPlayer.Season]E$INFO[VideoPlayer.Episode]</value>
    </variable>

    <expression name="showPosterOSD">String.IsEqual(Skin.String(OSDExtraArt),poster) | String.IsEqual(Skin.String(OSDExtraArt),epgicon) | [![String.IsEqual(Skin.String(OSDExtraArt),none) | String.IsEmpty(Skin.String(OSDExtraArt))] +
	                                [[String.IsEqual(Skin.String(OSDExtraArt),clearart) + String.IsEmpty(Player.Art(clearart)) + String.IsEmpty(Player.Art(tvshow.clearart)) + String.IsEmpty(Player.Art(artist.clearart)) +
									  String.IsEmpty(Player.Art(albumartist.clearart)) + String.IsEmpty(Player.Art(clearlogo)) + String.IsEmpty(Player.Art(tvshow.clearlogo)) + String.IsEmpty(Player.Art(artist.clearlogo)) +
									  String.IsEmpty(Player.Art(albumartist.clearlogo))] |
									 [String.IsEqual(Skin.String(OSDExtraArt),discart) + String.IsEmpty(Player.Art(discart)) + String.IsEmpty(Player.Art(album.discart)) + String.IsEmpty(Player.Art(clearart)) +
									  String.IsEmpty(Player.Art(tvshow.clearart)) + String.IsEmpty(Player.Art(artist.clearart)) + String.IsEmpty(Player.Art(albumartist.clearart)) + String.IsEmpty(Player.Art(clearlogo)) +
									  String.IsEmpty(Player.Art(tvshow.clearlogo)) + String.IsEmpty(Player.Art(artist.clearlogo)) + String.IsEmpty(Player.Art(albumartist.clearlogo))] |
									 [String.IsEqual(Skin.String(OSDExtraArt),logo) + String.IsEmpty(Player.Art(clearlogo)) + String.IsEmpty(Player.Art(tvshow.clearlogo)) + String.IsEmpty(Player.Art(artist.clearlogo)) +
									  String.IsEmpty(Player.Art(albumartist.clearlogo))] |
									 [String.IsEqual(Skin.String(OSDExtraArt),characterart) + String.IsEmpty(Player.Art(tvshow.characterart)) + String.IsEmpty(Player.Art(tvshow.clearart)) +
									  String.IsEmpty(Player.Art(clearart)) + String.IsEmpty(Player.Art(clearlogo)) + String.IsEmpty(Player.Art(tvshow.clearlogo))]]]</expression>


	<expression name="showCompactSeekBar">Skin.HasSetting(UseCompactOSD) + [Window.IsVisible(VideoOSD) | Window.IsVisible(MusicOSD)]</expression>


	<include name="TopSeekBar">
	    <posy>0</posy>
	</include>
	<include name="BottomSeekBar">
	    <posy>952</posy>
	</include>

    <include name="LowerOSDSlider">
	    <top>941</top>
	</include>
	<include name="RegularOSDSlider">
	    <top>-11</top>
	</include>

	<include name="LowerOSDButtons">
	    <top>800</top>
	</include>
	<include name="RegularOSDButtons">
	    <top>930</top>
	</include>
	<include name="CompactOSDTop">
	    <top>1000</top>
	</include>
	<include name="UltraCompactOSDTop">
	    <top>900</top>
	</include>

	<include name="LowerOSDPopups">
	    <top>390</top>
	</include>
	<include name="RegularOSDPopups">
	    <top>520</top>
	</include>
	<include name="UltraCompactPopupsTop">
	    <top>460</top>
	</include>

	<include name="LowerFullScreenInfo">
	    <top>700</top>
	</include>
	<include name="RegularFullScreenInfo">
	    <top>820</top>
	</include>

	<include name="LowerMusicFullScreenInfo">
	    <top>700</top>
	</include>
	<include name="RegularMusicFullScreenInfo">
	    <top>820</top>
	</include>

	<include name="FullScreenInfoDefaultCtrl">
	    <defaultcontrol always="true">601</defaultcontrol>
	</include>

	<include name="FullScreenInfoButtons">
	    <control type="grouplist" description="Flags">
			<top>245</top>
			<width>1305</width>
			<height>48</height>
			<itemgap>20</itemgap>
			<orientation>horizontal</orientation>
			<align>right</align>
			<control type="button" id="601">
				<width>180</width>
				<height>48</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>InfoPlot</font>
				<label>$VAR[DialogFullScreenBtn601]</label>
			</control>
			<control type="button" id="602">
				<visible>Videoplayer.content(livetv)</visible>
				<width>180</width>
				<height>45</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>InfoPlot</font>
				<label>$LOCALIZE[19031]</label>
			</control>
			<control type="button" id="603">
				<visible>!String.IsEmpty(VideoPlayer.CastAndRole)</visible>
				<width>180</width>
				<height>48</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>InfoPlot</font>
				<label>$LOCALIZE[206]</label>
			</control>
			<control type="button" id="604">
				<visible>VideoPlayer.Content(livetv) + system.getbool(pvrplayback.signalquality)</visible>
				<width>210</width>
				<height>48</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>InfoPlot</font>
				<label>$LOCALIZE[19008]</label>
			</control>
		</control>
	</include>

	<include name="CloseOSD3">
	    <visible>System.IdleTime(3)</visible>
	</include>
	<include name="CloseOSD4">
	    <visible>System.IdleTime(4)</visible>
	</include>
	<include name="CloseOSD5">
	    <visible>System.IdleTime(5)</visible>
	</include>
	<include name="CloseOSD6">
	    <visible>System.IdleTime(6)</visible>
	</include>
	<include name="CloseOSD7">
	    <visible>System.IdleTime(7)</visible>
	</include>
	<include name="CloseOSD8">
	    <visible>System.IdleTime(8)</visible>
	</include>
	<include name="CloseOSD9">
	    <visible>System.IdleTime(9)</visible>
	</include>
	<include name="CloseOSD10">
	    <visible>System.IdleTime(10)</visible>
	</include>
	<include name="CloseOSD15">
	    <visible>System.IdleTime(15)</visible>
	</include>
	<include name="CloseOSD20">
	    <visible>System.IdleTime(20)</visible>
	</include>
	<include name="CloseOSD30">
	    <visible>System.IdleTime(30)</visible>
	</include>
	<include name="CloseOSD60">
	    <visible>System.IdleTime(60)</visible>
	</include>


    <!-- Includes for opening Video Info Dialog from OSD -->
	<variable name="VideoOSDInfoButtonListType">
		<value condition="VideoPlayer.Content(movies)">movie</value>
		<value condition="VideoPlayer.Content(episodes)">episode</value>
		<value></value>
	</variable>

	<include name="VideoOSDInfoButtonList">
		<control type="list" id="43260">
			<left>0</left>
			<top>0</top>
			<width>1</width>
			<height>1</height>
			<itemlayout/>
			<focusedlayout/>
			<content>plugin://service.library.data.provider?type=$VAR[VideoOSDInfoButtonListType]&amp;dbid=$INFO[VideoPlayer.DBID]&amp;dbtype=$VAR[VideoOSDInfoButtonListType]</content>
		</control>
	</include>

	<include name="EHTVShowDetailsList">
		<control type="list" id="43261">
			<left>-100</left>
			<top>-100</top>
			<width>1</width>
			<height>1</height>
			<itemlayout height="1" width="1" />
			<focusedlayout height="1" width="1" />
			<content limit="1">plugin://script.embuary.helper/?info=getbydbid&amp;dbid=$INFO[VideoPlayer.DBID]&amp;type=tvshow&amp;idtype=episode</content>
		</control>
	</include>

	<include name="OSDButtons">
	    <param name="icon"></param>
		<definition>
            <textureradioonfocus colordiffuse="$VAR[FocusedTextColor]">$PARAM[icon]</textureradioonfocus>
            <textureradioonnofocus>$PARAM[icon]</textureradioonnofocus>
            <textureradioofffocus colordiffuse="$VAR[FocusedTextColor]">$PARAM[icon]</textureradioofffocus>
            <textureradiooffnofocus>$PARAM[icon]</textureradiooffnofocus>
            <textureradioondisabled colordiffuse="Disabled">$PARAM[icon]</textureradioondisabled>
            <textureradiooffdisabled colordiffuse="Disabled">$PARAM[icon]</textureradiooffdisabled>
            <texturefocus border="4" colordiffuse="$VAR[HighlightColor]">img/WhiteRoundedST2.png</texturefocus>
            <width>64</width>
            <height>64</height>
            <radiowidth>64</radiowidth>
            <radioheight>64</radioheight>
            <font></font>
            <texturenofocus></texturenofocus>
            <radioposx>0.1</radioposx>
            <radioposy>0</radioposy>
            <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</definition>
    </include>

	<include name="FullScreenExtraArt">
	    <param name="logoleft">1400</param>
		<param name="arttop">720</param>
		<param name="disctop">720</param>
		<param name="logowidth">480</param>
		<param name="discleft">1400</param>
		<param name="artheight">320</param>
		<param name="characterleft">1480</param>
		<param name="clearartleft">1400</param>
		<param name="clearartwidth">480</param>
		<definition>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
			    <posx>$PARAM[characterleft]</posx>
                <width>$PARAM[artheight]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(characterart)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>bottom</aligny>
				<visible>VideoPlayer.Content(movies)</visible>
				<visible>!String.IsEmpty(Player.Art(characterart)) + String.IsEqual(Skin.String(OSDExtraArt),characterart)</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
			    <posx>$PARAM[characterleft]</posx>
                <width>$PARAM[artheight]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(tvshow.characterart)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>bottom</aligny>
				<visible>VideoPlayer.Content(episodes)</visible>
				<visible>!String.IsEmpty(Player.Art(tvshow.characterart)) + String.IsEqual(Skin.String(OSDExtraArt),characterart)</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
		        <posx>$PARAM[logoleft]</posx>
                <width>$PARAM[logowidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(clearlogo)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)</visible>
				<visible>!String.IsEmpty(Player.Art(clearlogo)) + [String.IsEqual(Skin.String(OSDExtraArt),logo) |
				         [String.IsEqual(Skin.String(OSDExtraArt),discart) + String.IsEmpty(Player.Art(discart))] |
						 [String.IsEqual(Skin.String(OSDExtraArt),clearart) + String.IsEmpty(Player.Art(clearart))] |
						 [String.IsEqual(Skin.String(OSDExtraArt),characterart) + String.IsEmpty(Player.Art(characterart)) + String.IsEmpty(Player.Art(clearart))]]</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
		        <posx>$PARAM[logoleft]</posx>
                <width>$PARAM[logowidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(tvshow.clearlogo)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>VideoPlayer.Content(episodes)</visible>
				<visible>!String.IsEmpty(Player.Art(tvshow.clearlogo)) + [String.IsEqual(Skin.String(OSDExtraArt),logo) |
				         [String.IsEqual(Skin.String(OSDExtraArt),discart) + String.IsEmpty(Player.Art(tvshow.discart))] |
						 [String.IsEqual(Skin.String(OSDExtraArt),clearart) + String.IsEmpty(Player.Art(tvshow.clearart))] |
						 [String.IsEqual(Skin.String(OSDExtraArt),characterart) + String.IsEmpty(Player.Art(tvshow.characterart)) + String.IsEmpty(Player.Art(tvshow.clearart))]]</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
		        <posx>$PARAM[logoleft]</posx>
                <width>$PARAM[logowidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(artist.clearlogo)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>Player.HasAudio | VideoPlayer.Content(musicvideos)</visible>
				<visible>!String.IsEmpty(Player.Art(artist.clearlogo)) + String.IsEmpty(Player.Art(clearlogo)) + [String.IsEqual(Skin.String(OSDExtraArt),logo) |
				         [String.IsEqual(Skin.String(OSDExtraArt),discart) + String.IsEmpty(Player.Art(album.discart))] |
						 [String.IsEqual(Skin.String(OSDExtraArt),clearart) + String.IsEmpty(Player.Art(artist.clearart))]]</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
		        <posx>$PARAM[logoleft]</posx>
                <width>$PARAM[logowidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(albumartist.clearlogo)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>Player.HasAudio</visible>
				<visible>!String.IsEmpty(Player.Art(albumartist.clearlogo)) + String.IsEmpty(Player.Art(artist.clearlogo)) + [String.IsEqual(Skin.String(OSDExtraArt),logo) |
				         [String.IsEqual(Skin.String(OSDExtraArt),discart) + String.IsEmpty(Player.Art(album.discart))] |
						 [String.IsEqual(Skin.String(OSDExtraArt),clearart) + String.IsEmpty(Player.Art(artist.clearart)) + String.IsEmpty(Player.Art(albumartist.clearart))]]</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
			    <posx>$PARAM[clearartleft]</posx>
                <width>$PARAM[clearartwidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(clearart)]</texture>
			    <aspectratio>keep</aspectratio>
			    <align>center</align>
				<aligny>bottom</aligny>
                <visible>VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)</visible>
				<visible>!String.IsEmpty(Player.Art(clearart)) + [String.IsEqual(Skin.String(OSDExtraArt),clearart) |
						 [String.IsEqual(Skin.String(OSDExtraArt),characterart) + String.IsEmpty(Player.Art(characterart))]]</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
			    <posx>$PARAM[clearartleft]</posx>
                <width>$PARAM[clearartwidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(tvshow.clearart)]</texture>
			    <aspectratio>keep</aspectratio>
			    <align>center</align>
				<aligny>bottom</aligny>
                <visible>VideoPlayer.Content(episodes)</visible>
				<visible>!String.IsEmpty(Player.Art(tvshow.clearart)) + [String.IsEqual(Skin.String(OSDExtraArt),clearart) |
						 [String.IsEqual(Skin.String(OSDExtraArt),characterart) + String.IsEmpty(Player.Art(tvshow.characterart))]]</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
			    <posx>$PARAM[clearartleft]</posx>
                <width>$PARAM[clearartwidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(artist.clearart)]</texture>
			    <aspectratio>keep</aspectratio>
			    <align>center</align>
				<aligny>bottom</aligny>
                <visible>Player.HasAudio</visible>
				<visible>!String.IsEmpty(Player.Art(artist.clearart)) + String.IsEqual(Skin.String(OSDExtraArt),clearart)</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[arttop]</posy>
			    <posx>$PARAM[clearartleft]</posx>
                <width>$PARAM[clearartwidth]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(albumartist.clearart)]</texture>
			    <aspectratio>keep</aspectratio>
			    <align>center</align>
				<aligny>bottom</aligny>
                <visible>Player.HasAudio</visible>
				<visible>!String.IsEmpty(Player.Art(albumartist.clearart)) + String.IsEmpty(Player.Art(artist.clearart)) + String.IsEqual(Skin.String(OSDExtraArt),clearart)</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[disctop]</posy>
			    <posx>$PARAM[discleft]</posx>
                <width>$PARAM[discheight]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(discart)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>VideoPlayer.Content(movies) | VideoPlayer.Content(musicvideos)</visible>
				<visible>!String.IsEmpty(Player.Art(discart)) + String.IsEqual(Skin.String(OSDExtraArt),discart)</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[disctop]</posy>
			    <posx>$PARAM[discleft]</posx>
                <width>$PARAM[artheight]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(tvshow.discart)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>VideoPlayer.Content(episodes)</visible>
				<visible>!String.IsEmpty(Player.Art(tvshow.discart)) + String.IsEqual(Skin.String(OSDExtraArt),discart)</visible>
            </control>
			<control type="image" id="1">
                <posy>$PARAM[disctop]</posy>
			    <posx>$PARAM[discleft]</posx>
                <width>$PARAM[artheight]</width>
                <height>$PARAM[artheight]</height>
                <texture background="true">$INFO[Player.Art(album.discart)]</texture>
		        <aspectratio>keep</aspectratio>
				<align>center</align>
				<aligny>center</aligny>
                <visible>Player.HasAudio | VideoPlayer.Content(musicvideos)</visible>
				<visible>String.IsEmpty(Player.Art(discart)) + !String.IsEmpty(Player.Art(album.discart)) + String.IsEqual(Skin.String(OSDExtraArt),discart)</visible>
            </control>

		</definition>
	</include>

	<include name="ButtonGroup1Standard">
	    <!-- Music Repeat One, All, None -->
		<control type="group" id="590">
            <width>64</width>
            <height>64</height>
			<visible>Window.IsVisible(MusicOSD)</visible>
            <control type="button" id="591">
                <visible>!MusicPlayer.Content(livetv)</visible>
                <width>64</width>
                <height>64</height>
                <font></font>
                <texturefocus border="4" colordiffuse="$VAR[HighlightColor]">img/WhiteRoundedST2.png</texturefocus>
                <texturenofocus></texturenofocus>
                <onright>592</onright>
				<onclick>PlayerControl(Repeat)</onclick>
            </control>
            <control type="image">
                <visible>!Control.HasFocus(591)</visible>
                <width>64</width>
                <height>64</height>
                <texture>$VAR[MusicRepeat]</texture>
            </control>
            <control type="image">
                <visible>Control.HasFocus(591)</visible>
                <width>64</width>
                <height>64</height>
                <texture colordiffuse="$VAR[FocusedTextColor]">$VAR[MusicRepeat]</texture>
            </control>
        </control>
		<!-- Music Random -->
        <control type="radiobutton" id="592" description="Random">
            <textureradioonfocus colordiffuse="$VAR[FocusedTextColor]">OSD/OSDRandomOnNF.png</textureradioonfocus>
            <textureradioonnofocus>OSD/OSDRandomOnNF.png</textureradioonnofocus>
            <textureradioofffocus colordiffuse="$VAR[FocusedTextColor]">OSD/OSDRandomOffNF.png</textureradioofffocus>
            <textureradiooffnofocus>OSD/OSDRandomOffNF.png</textureradiooffnofocus>
            <texturefocus border="4" colordiffuse="$VAR[HighlightColor]">img/WhiteRoundedST2.png</texturefocus>
            <width>64</width>
            <height>64</height>
            <radiowidth>64</radiowidth>
            <radioheight>64</radioheight>
            <font></font>
            <texturenofocus></texturenofocus>
            <radioposx>0.1</radioposx>
            <radioposy>0</radioposy>
            <selected>Playlist.IsRandom</selected>
			<onclick>PlayerControl(Random)</onclick>
			<visible>Window.IsVisible(MusicOSD)</visible>
        </control>
		<!-- Previous -->
		<control type="radiobutton" id="600">
		    <include content="OSDButtons" condition="!VideoPlayer.Content(livetv)">
			    <param name="icon">OSD/OSDPreviousNF.png</param>
		    </include>
			<include content="OSDButtons" condition="VideoPlayer.Content(livetv)">
			    <param name="icon">OSD/OSDChannelDownNF.png</param>
		    </include>
			<onclick>PlayerControl(Previous)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Rewind -->
		<control type="radiobutton" id="601">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDRWNF.png</param>
		    </include>
		    <enable>Player.SeekEnabled</enable>
			<onclick>PlayerControl(Rewind)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
		</control>
		<!-- Play/Pause -->
		<control type="radiobutton" id="602">
		    <textureradioonfocus colordiffuse="$VAR[FocusedTextColor]">OSD/OSDPlayNF.png</textureradioonfocus>
		    <textureradioonnofocus>OSD/OSDPlayNF.png</textureradioonnofocus>
		    <textureradioofffocus colordiffuse="$VAR[FocusedTextColor]">OSD/OSDPauseNF.png</textureradioofffocus>
		    <textureradiooffnofocus>OSD/OSDPauseNF.png</textureradiooffnofocus>
		    <texturefocus border="4" colordiffuse="$VAR[HighlightColor]">img/WhiteRoundedST2.png</texturefocus>
		    <width>64</width>
		    <height>64</height>
		    <radiowidth>64</radiowidth>
		    <radioheight>64</radioheight>
		    <font></font>
		    <texturenofocus></texturenofocus>
		    <radioposx>0.1</radioposx>
		    <radioposy>0</radioposy>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		    <selected>[Player.Paused | Player.Rewinding | Player.Forwarding]</selected>
			<onclick>PlayerControl(Play)</onclick>
		    <visible>Player.PauseEnabled</visible>
		</control>
		<!-- Stop -->
		<control type="radiobutton" id="603">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDStopNF.png</param>
		    </include>
			<onclick>PlayerControl(Stop)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Fast Forward -->
		<control type="radiobutton" id="604">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDFWNF.png</param>
		    </include>
		    <enable>Player.SeekEnabled</enable>
			<onclick>PlayerControl(Forward)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
		</control>
		<!-- Next -->
		<control type="radiobutton" id="605">
		    <include content="OSDButtons" condition="!VideoPlayer.Content(livetv)">
			    <param name="icon">OSD/OSDNextNF.png</param>
		    </include>
			<include content="OSDButtons" condition="VideoPlayer.Content(livetv)">
			    <param name="icon">OSD/OSDChannelUpNF.png</param>
		    </include>
		    <onclick>PlayerControl(Next)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Video Menu -->
		<control type="radiobutton" id="661">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDDvdNF.png</param>
		    </include>
			<onclick>PlayerControl(ShowVideoMenu)</onclick>
		    <visible>!VideoPlayer.Content(livetv) + VideoPlayer.HasMenu</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Record -->
		<control type="radiobutton" id="700">
		    <visible>PVR.CanRecordPlayingChannel</visible>
		    <visible>VideoPlayer.Content(livetv) | MusicPlayer.Content(livetv)</visible>
		    <include content="OSDButtons">
		        <param name="icon">OSD/OSDRecordNF.png</param>
			</include>
			<onclick>PVR.ToggleRecordPlayingChannel</onclick>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
	</include>

	<include name="ButtonGroup1Compact">
	    <!-- Music Repeat None, One, All -->
	    <control type="togglebutton" id="591">
            <usealttexture>Control.HasFocus(591) | Control.HasFocus(592) | Control.HasFocus(593)</usealttexture>
            <description>Repeat</description>
            <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-off.png</alttexturefocus>
            <alttexturenofocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-off.png</alttexturenofocus>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-off.png</texturefocus>
            <texturenofocus>OSD/compact/repeat-off.png</texturenofocus>
            <onclick>PlayerControl(Repeat)</onclick>
            <visible>!Playlist.IsRepeatOne + !Playlist.IsRepeat</visible>
	        <visible>Window.IsVisible(MusicOSD)</visible>
        </control>
        <control type="togglebutton" id="592">
            <usealttexture>Control.HasFocus(591) | Control.HasFocus(592) | Control.HasFocus(593)</usealttexture>
            <description>Repeat</description>
            <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-one.png</alttexturefocus>
            <alttexturenofocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-one.png</alttexturenofocus>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-one.png</texturefocus>
            <texturenofocus>OSD/compact/repeat-one.png</texturenofocus>
            <onclick>PlayerControl(Repeat)</onclick>
            <visible>Playlist.IsRepeatOne</visible>
		    <visible>Window.IsVisible(MusicOSD)</visible>
        </control>
        <control type="togglebutton" id="593">
            <usealttexture>Control.HasFocus(591) | Control.HasFocus(592) | Control.HasFocus(593)</usealttexture>
            <description>Repeat</description>
            <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-all.png</alttexturefocus>
            <alttexturenofocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-all.png</alttexturenofocus>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/repeat-all.png</texturefocus>
            <texturenofocus>OSD/compact/repeat-all.png</texturenofocus>
            <onclick>PlayerControl(Repeat)</onclick>
            <visible>Playlist.IsRepeat</visible>
		    <visible>Window.IsVisible(MusicOSD)</visible>
        </control>
		<!-- Music Random -->
        <control type="togglebutton" id="594">
            <description>Shuffle</description>
            <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <usealttexture>Playlist.IsRandom</usealttexture>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/shuffle.png</texturefocus>
            <texturenofocus>OSD/compact/shuffle.png</texturenofocus>
            <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/shuffle-on.png</alttexturefocus>
            <alttexturenofocus>OSD/compact/shuffle-on.png</alttexturenofocus>
            <onclick>PlayerControl(Random)</onclick>
		    <visible>Window.IsVisible(MusicOSD)</visible>
        </control>
		<!-- Previous -->
		<control type="button" id="600">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]" flipx="true">OSD/compact/next.png</texturefocus>
            <texturenofocus flipx="true">OSD/compact/next.png</texturenofocus>
		    <onclick>PlayerControl(Previous)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Rewind -->
		<control type="button" id="601">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]" flipx="true">OSD/compact/ff.png</texturefocus>
            <texturenofocus flipx="true">OSD/compact/ff.png</texturenofocus>
		    <onclick>PlayerControl(Rewind)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
		</control>
		<!-- Play/Pause -->
		<control type="togglebutton" id="602">
            <width>64</width>
            <height>64</height>
            <label/>
            <altlabel></altlabel>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/pause.png</texturefocus>
            <texturenofocus>OSD/compact/pause.png</texturenofocus>
            <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
            <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/play.png</alttexturefocus>
            <alttexturenofocus>OSD/compact/play.png</alttexturenofocus>
		    <onclick>PlayerControl(Play)</onclick>
		    <visible>Player.PauseEnabled</visible>
            <animation effect="fade" start="100" end="33" time="100" condition="!Player.PauseEnabled">Conditional</animation>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
        </control>
		<!-- Stop -->
		<control type="button" id="603">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/stop.png</texturefocus>
            <texturenofocus>OSD/compact/stop.png</texturenofocus>
		    <onclick>PlayerControl(Stop)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Fast Forward -->
		<control type="button" id="604">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/ff.png</texturefocus>
            <texturenofocus>OSD/compact/ff.png</texturenofocus>
		    <onclick>PlayerControl(Forward)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<visible>[Player.SeekEnabled + !VideoPlayer.Content(livetv)] + !Player.Paused</visible>
		</control>
		<!-- Next -->
		<control type="button" id="605">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/next.png</texturefocus>
            <texturenofocus>OSD/compact/next.png</texturenofocus>
		    <onclick>PlayerControl(Next)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Video Menu -->
		<control type="button" id="661">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/playlist.png</texturefocus>
            <texturenofocus>OSD/compact/playlist.png</texturenofocus>
		    <onclick>PlayerControl(ShowVideoMenu)</onclick>
		    <visible>!VideoPlayer.Content(livetv) + VideoPlayer.HasMenu</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Record -->
		<control type="togglebutton" id="700">
            <width>64</width>
            <height>64</height>
		    <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/record.png</texturefocus>
            <texturenofocus>OSD/compact/record.png</texturenofocus>
            <usealttexture>PVR.IsRecordingPlayingChannel</usealttexture>
            <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/record-on.png</alttexturefocus>
            <alttexturenofocus>OSD/compact/record-on.png</alttexturenofocus>
            <onclick>PVR.ToggleRecordPlayingChannel</onclick>
            <enable>PVR.CanRecordPlayingChannel</enable>
            <visible>VideoPlayer.Content(LiveTV) | MusicPlayer.Content(LiveTV)</visible>
            <animation effect="fade" start="100" end="33" time="100" condition="!PVR.CanRecordPlayingChannel">Conditional</animation>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
        </control>
	</include>

	<include name="ButtonGroup2Standard">
	    <!-- Music Rating -->
		<control type="radiobutton" id="651">
            <include content="OSDButtons">
                <param name="icon">OSD/OSDStarNF.png</param>
            </include>
			<onclick>setrating</onclick>
			<visible>Window.IsVisible(MusicOSD)</visible>
        </control>
		<!-- Music Playlist -->
    	<control type="radiobutton" id="652">
	        <include content="OSDButtons">
			    <param name="icon">OSD/OSDTeletextNF.png</param>
		    </include>
		    <onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(musicplaylist)</onclick>
			<visible>Integer.IsGreater(Playlist.Length(music),0)</visible>
		    <visible>Window.IsVisible(MusicOSD)</visible>
		</control>
		<!-- video: 3D -->
		<control type="button" id="655">
		    <visible>VideoPlayer.IsStereoscopic</visible>
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDStereoscopicNF.png</param>
		    </include>
		    <onup>1200</onup>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Subtitles/Lyrics -->
		<control type="radiobutton" id="656">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDSubtitlesNF.png</param>
		    </include>
		    <onup condition="!Skin.HasSetting(SubtitleOpensSettings)">1110</onup>
		    <onfocus>ClearProperty(PopupMenuActive,Home)</onfocus>
			<onclick condition="Window.IsVisible(VideoOSD) + Skin.HasSetting(SubtitleOpensSettings)">ActivateWindow(osdsubtitlesettings)</onclick>
		    <onclick condition="Window.IsVisible(VideoOSD) + !Skin.HasSetting(SubtitleOpensSettings)">SetProperty(PopupMenuActive,Yes,Home)</onclick>
			<onclick condition="Window.IsVisible(VideoOSD) + !Skin.HasSetting(SubtitleOpensSettings)">SetFocus(1110)</onclick>
			<onclick condition="Window.IsVisible(MusicOSD) + String.IsEmpty(Skin.String(LyricPath))">Skin.SetAddon(LyricPath,xbmc.python.lyrics)</onclick>
            <onclick condition="Window.IsVisible(MusicOSD) + !String.IsEmpty(Skin.String(LyricPath))">RunScript($INFO[Skin.String(LyricPath)])</onclick>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<visible>Window.IsVisible(VideoOSD) | [Window.IsVisible(MusicOSD) + !Skin.HasSetting(Disable.Lyrics)]</visible>
		</control>
		<!-- PVR OSD Channels -->
		<control type="radiobutton" id="606">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDChannelsNF.png</param>
		    </include>
		    <onclick>ActivateWindow(PVROSDChannels)</onclick>
		    <onclick>Dialog.Close(VideoOSD)</onclick>
		    <visible>VideoPlayer.Content(livetv)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- PVR EPG -->
		<control type="radiobutton" id="607">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDEpgNF.png</param>
		    </include>
			<onclick>ActivateWindow(PVRChannelGuide)</onclick>
		    <onclick>Dialog.Close(VideoOSD)</onclick>
		    <visible>VideoPlayer.Content(livetv)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Episode List -->
		<control type="radiobutton" id="6071">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDTeletextNF.png</param>
		    </include>
			<onclick>SetProperty(PlayerTVShowID,$INFO[Container(43261).ListItem.DBID],home)</onclick>
			<onclick condition="!Player.Paused">PlayerControl(Play)</onclick>
			<onclick>ActivateWindow(1145)</onclick>
		    <visible>!VideoPlayer.Content(livetv) + VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.DBID) + Skin.HasSetting(Enable.EmbuaryHelper) + System.AddonIsEnabled(script.embuary.helper)</visible>
		    <visible>Skin.HasSetting(ShowEpisodeList)</visible>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- PVR Teletext -->
		<control type="radiobutton" id="650">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDTeletextNF.png</param>
		    </include>
			<onclick>Dialog.Close(VideoOSD)</onclick>
			<onclick condition="!Skin.HasSetting(TeletextOpensEPG)">ActivateWindow(Teletext)</onclick>
			<onclick condition="Skin.HasSetting(TeletextOpensEPG)">ActivateWindow(TVGuide)</onclick>
		    <visible>VideoPlayer.Content(livetv)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Video Bookmarks -->
		<control type="radiobutton" id="660">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDBookmarksNF.png</param>
		    </include>
			<onclick>ActivateWindow(VideoBookmarks)</onclick>
		    <visible>!VideoPlayer.Content(livetv)</visible>
			<visible>Window.IsVisible(VideoOSD)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Info -->
		<control type="radiobutton" id="701">
    		<visible>Window.IsVisible(VideoOSD)</visible>
			<include content="OSDButtons">
	    		<param name="icon">OSD/OSDInfoNF.png</param>
			</include>
			<onclick condition="!Skin.HasSetting(InfoOpensVideoInfo) | String.IsEmpty(VideoPlayer.DBID)">Skin.ToggleSetting(OSDInfo)</onclick>
		    <!-- If setting enabled, set focus to hidden list from library data provider to be able to open video info dialog -->
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID)">SetProperty(OSDinfodialogButtonActive,True,home)</onclick>
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID) + Skin.HasSetting(PauseOnVideoInfo) + !Player.Paused">PlayerControl(Play)</onclick>
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID)">SetFocus(43260)</onclick>
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID)">Action(Info)</onclick>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Settings -->
		<control type="radiobutton" id="659">
		    <include content="OSDButtons">
			    <param name="icon">OSD/OSDOptionsNF.png</param>
		    </include>
		    <onup>1010</onup>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<onfocus>ClearProperty(PopupMenu2Active,Home)</onfocus>
			<onclick>SetProperty(PopupMenu2Active,Yes,Home)</onclick>
		    <onclick>SetFocus(1010)</onclick>
		</control>
	</include>

	<include name="ButtonGroup2Compact">
	    <!-- Rating -->
		<control type="button" id="654">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/rating.png</texturefocus>
            <texturenofocus>OSD/compact/rating.png</texturenofocus>
		    <onclick>setrating</onclick>
			<visible>Window.IsVisible(MusicOSD)</visible>
		</control>
		<!-- Music Playlist -->
    	<control type="button" id="6541">
	        <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/playlist.png</texturefocus>
            <texturenofocus>OSD/compact/playlist.png</texturenofocus>
		    <onclick>Dialog.Close(all,true)</onclick>
			<onclick>ActivateWindow(musicplaylist)</onclick>
			<visible>Integer.IsGreater(Playlist.Length(music),0)</visible>
			<visible>Window.IsVisible(MusicOSD)</visible>
		</control>
		<!-- 3D -->
		<control type="button" id="655">
	        <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/3d.png</texturefocus>
            <texturenofocus>OSD/compact/3d.png</texturenofocus>
		    <onup>1200</onup>
		    <visible>!VideoPlayer.Content(livetv) + Window.IsVisible(VideoOSD)</visible>
		    <visible>VideoPlayer.IsStereoscopic</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Subtitles -->
		<control type="button" id="656">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/subs.png</texturefocus>
            <texturenofocus>OSD/compact/subs.png</texturenofocus>
		    <onup condition="!Skin.HasSetting(SubtitleOpensSettings)">1110</onup>
		    <onfocus>ClearProperty(PopupMenuActive,Home)</onfocus>
			<onclick condition="Window.IsVisible(VideoOSD) + Skin.HasSetting(SubtitleOpensSettings)">ActivateWindow(osdsubtitlesettings)</onclick>
		    <onclick condition="Window.IsVisible(VideoOSD) + !Skin.HasSetting(SubtitleOpensSettings)">SetProperty(PopupMenuActive,Yes,Home)</onclick>
			<onclick condition="Window.IsVisible(VideoOSD) + !Skin.HasSetting(SubtitleOpensSettings)">SetFocus(1110)</onclick>
			<onclick condition="Window.IsVisible(MusicOSD) + String.IsEmpty(Skin.String(LyricPath))">Skin.SetAddon(LyricPath,xbmc.python.lyrics)</onclick>
            <onclick condition="Window.IsVisible(MusicOSD) + !String.IsEmpty(Skin.String(LyricPath))">RunScript($INFO[Skin.String(LyricPath)])</onclick>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
			<visible>Window.IsVisible(VideoOSD) | [Window.IsVisible(MusicOSD) + !Skin.HasSetting(Disable.Lyrics)]</visible>
		</control>
		<!-- Channels -->
    	<control type="button" id="606">
	        <top>10</top>
			<width>40</width>
            <height>40</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/channels.png</texturefocus>
            <texturenofocus>OSD/compact/channels.png</texturenofocus>
		    <onclick>ActivateWindow(PVROSDChannels)</onclick>
		    <onclick>Dialog.Close(VideoOSD)</onclick>
		    <visible>VideoPlayer.Content(livetv)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- OSD Guide -->
    	<control type="button" id="607">
	        <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/playlist.png</texturefocus>
            <texturenofocus>OSD/compact/playlist.png</texturenofocus>
		    <onclick>ActivateWindow(PVRChannelGuide)</onclick>
		    <onclick>Dialog.Close(VideoOSD)</onclick>
		    <visible>VideoPlayer.Content(livetv)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Episode List -->
    	<control type="button" id="6071">
	        <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/playlist.png</texturefocus>
            <texturenofocus>OSD/compact/playlist.png</texturenofocus>
		    <onclick>SetProperty(PlayerTVShowID,$INFO[Container(43261).ListItem.DBID],home)</onclick>
			<onclick condition="!Player.Paused">PlayerControl(Play)</onclick>
			<onclick>ActivateWindow(1145)</onclick>
		    <visible>!VideoPlayer.Content(livetv) + VideoPlayer.Content(episodes) + !String.IsEmpty(VideoPlayer.DBID) + Skin.HasSetting(Enable.EmbuaryHelper) + System.AddonIsEnabled(script.embuary.helper)</visible>
		    <visible>Skin.HasSetting(ShowEpisodeList)</visible>
			<oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Teletext -->
		<control type="button" id="650">
		    <top>14</top>
		    <width>35</width>
            <height>35</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/text.png</texturefocus>
            <texturenofocus>OSD/compact/text.png</texturenofocus>
		    <onclick>Dialog.Close(VideoOSD)</onclick>
		    <onclick condition="!Skin.HasSetting(TeletextOpensEPG)">ActivateWindow(Teletext)</onclick>
			<onclick condition="Skin.HasSetting(TeletextOpensEPG)">ActivateWindow(TVGuide)</onclick>
		    <visible>VideoPlayer.Content(livetv)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Video Bookmarks -->
		<control type="button" id="660">
		    <top>12</top>
		    <width>40</width>
            <height>40</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/bookmarks.png</texturefocus>
            <texturenofocus>OSD/compact/bookmarks.png</texturenofocus>
			<onclick>ActivateWindow(VideoBookmarks)</onclick>
		    <visible>!VideoPlayer.Content(livetv) + Window.IsVisible(VideoOSD)</visible>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Info -->
		<control type="button" id="701">
		    <visible>Window.IsVisible(VideoOSD)</visible>
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/info.png</texturefocus>
            <texturenofocus>OSD/compact/info.png</texturenofocus>
		    <onclick condition="!Skin.HasSetting(InfoOpensVideoInfo) | String.IsEmpty(VideoPlayer.DBID)">Skin.ToggleSetting(OSDInfo)</onclick>
		    <!-- If setting enabled, set focus to hidden list from library data provider to be able to open video info dialog -->
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID)">SetProperty(OSDinfodialogButtonActive,True,home)</onclick>
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID) + Skin.HasSetting(PauseOnVideoInfo) + !Player.Paused">PlayerControl(Play)</onclick>
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID)">SetFocus(43260)</onclick>
		    <onclick condition="Skin.HasSetting(InfoOpensVideoInfo) + !String.IsEmpty(VideoPlayer.DBID)">Action(Info)</onclick>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		</control>
		<!-- Settings -->
		<control type="button" id="659">
		    <width>64</width>
            <height>64</height>
            <label/>
            <font/>
            <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/settings.png</texturefocus>
            <texturenofocus>OSD/compact/settings.png</texturenofocus>
		    <onup>1010</onup>
		    <oninfo>Skin.ToggleSetting(OSDInfo)</oninfo>
		    <onfocus>ClearProperty(PopupMenu2Active,Home)</onfocus>
			<onclick>SetProperty(PopupMenu2Active,Yes,Home)</onclick>
		    <onclick>SetFocus(1010)</onclick>
		</control>
	</include>

	<include name="Group2StandardLayout">
	    <itemgap>0</itemgap>
		<usecontrolcoords>false</usecontrolcoords>
	</include>

	<include name="Group2CompactLayout">
	    <itemgap>10</itemgap>
		<usecontrolcoords>true</usecontrolcoords>
	</include>

	<include name="OSDPopups">
	    <param name="popupleft">840</param>
		<definition>
		    <control type="group" id="1000">
			    <height>400</height>
			    <width>535</width>
			    <left>$PARAM[popupleft]</left>
				<visible>!String.IsEmpty(Window(Home).Property(PopupMenu2Active))</visible>
                   <control type="button">
			        <description>Hidden button to close the popup when you click outside it</description>
			        <posx>0</posx>
			        <posy>0</posy>
			        <width>1920</width>
			        <height>960</height>
			        <texturenofocus></texturenofocus>
			        <texturefocus></texturefocus>
			        <onclick>ClearProperty(PopupMenu2Active,Home)</onclick>
		        </control>
			    <control type="grouplist" id="1010">
				    <left>30</left>
				    <width>470</width>
				    <height>395</height>
				    <onleft>659</onleft>
				    <onright>659</onright>
				    <onup>659</onup>
				    <ondown>659</ondown>
				    <orientation>vertical</orientation>
				    <align>right</align>
					<itemgap>-5</itemgap>
				    <control type="button" id="10101">
					    <height>80</height>
					    <width>470</width>
					    <font>Details</font>
					    <label>$LOCALIZE[13396]</label>
						<onclick>ActivateWindow(osdaudiosettings)</onclick>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(videoOSD)</visible>
				    </control>
				    <control type="button" id="10102">
					    <height>80</height>
					    <width>470</width>
					    <font>Details</font>
					    <label>$LOCALIZE[13395]</label>
						<onclick>ActivateWindow(osdvideosettings)</onclick>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(videoOSD)</visible>
				    </control>
				    <control type="button" id="10103">
					    <height>80</height>
					    <width>470</width>
					    <font>Details</font>
					    <label>$LOCALIZE[36560]</label>
						<onclick>ActivateWindow(osdcmssettings)</onclick>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
					    <visible>System.HasCMS</visible>
						<visible>Window.IsVisible(videoOSD)</visible>
				    </control>
				    <control type="button" id="10104">
					    <height>80</height>
					    <width>470</width>
					    <font>Details</font>
					    <label>$LOCALIZE[31133]</label>
					    <label2>$INFO[VideoPlayer.AudioLanguage,[COLOR=Hghlight],[/COLOR]]</label2>
						<onclick>AudioNextLanguage</onclick>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(videoOSD)</visible>
				    </control>
					<control type="radiobutton" id="10105">
					    <height>80</height>
					    <width>470</width>
					    <label>$LOCALIZE[32377]</label>
					    <radioposx>380</radioposx>
						<onclick>Skin.ToggleSetting(Disable.Lyrics)</onclick>
					    <selected>!Skin.HasSetting(Disable.Lyrics)</selected>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(MusicOSD)</visible>
					</control>
					<control type="button" id="10106">
                        <width>470</width>
                        <font>Details</font>
                        <label>$LOCALIZE[24013]</label>
                        <label2>[COLOR=$VAR[SelectedTextColor]]$INFO[Skin.String(LyricPath)][/COLOR]</label2>
						<onclick>Close</onclick>
                        <onclick condition="String.IsEmpty(Skin.String(LyricPath))">Skin.SetAddon(LyricPath,xbmc.python.lyrics)</onclick>
                        <onclick condition="!String.IsEmpty(Skin.String(LyricPath))">RunScript($INFO[Skin.String(LyricPath)])</onclick>
                        <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>!Skin.HasSetting(Disable.Lyrics)</visible>
						<visible>Window.IsVisible(MusicOSD)</visible>
                    </control>
<!--                    <control type="button" id="10107">
                        <width>470</width>
                        <font>Details</font>
                        <label>$LOCALIZE[559]</label>
						<onclick>Close</onclick>
                        <onclick>ActivateWindow(MusicPlaylist)</onclick>
                        <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(MusicOSD)</visible>
                    </control> -->
                    <control type="button" id="10108">
                        <width>470</width>
                        <font>Details</font>
                        <label>$LOCALIZE[20445]</label>
                        <label2>[COLOR=$VAR[SelectedTextColor]]$VAR[MusicPlayingFanartLabel2][/COLOR]</label2>
						<onclick>Skin.ToggleSetting(MusicPlayingFanart)</onclick>
                        <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(MusicOSD)</visible>
                    </control>
                    <control type="button" id="10109">
                        <width>470</width>
                        <font>Details</font>
                        <label>$LOCALIZE[250]</label>
                        <label2>[COLOR=$VAR[SelectedTextColor]]$VAR[VisualisationName][/COLOR]</label2>
						<onclick>Dialog.Close(all)</onclick>
						<onclick>SendClick(500)</onclick>
                        <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(MusicOSD)</visible>
                    </control>
                    <control type="button" id="101010">
                        <width>470</width>
                        <font>Details</font>
                        <label>$LOCALIZE[250] $LOCALIZE[10004]</label>
						<onclick>Addon.Default.OpenSettings(xbmc.player.musicviz)</onclick>
                        <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
                        <visible>Visualisation.Enabled</visible>
						<visible>Window.IsVisible(MusicOSD)</visible>
                    </control>
                    <control type="button" id="101011">
                        <width>470</width>
                        <font>Details</font>
                        <label>$LOCALIZE[31048]</label>
						<onclick>ActivateWindow(visualisationpresetlist)</onclick>
                        <visible>Visualisation.HasPresets</visible>
                        <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
						<visible>Window.IsVisible(MusicOSD)</visible>
                    </control>
			    </control>
		    </control>
		    <control type="group" id="1100">
			    <left>$PARAM[popupleft]</left>
				<visible>!String.IsEmpty(Window(Home).Property(PopupMenuActive))</visible>
                   <control type="button">
			        <description>Hidden button to close the popup when you click outside it</description>
			        <posx>0</posx>
			        <posy>0</posy>
			        <width>1920</width>
			        <height>960</height>
			        <texturenofocus></texturenofocus>
			        <texturefocus></texturefocus>
			        <onclick>ClearProperty(PopupMenuActive,Home)</onclick>
		        </control>
				<control type="grouplist" id="1110">
				    <align>right</align>
				    <left>30</left>
				    <width>470</width>
				    <height>400</height>
				    <onleft>656</onleft>
				    <onright>656</onright>
				    <onup>656</onup>
				    <ondown>656</ondown>
					<itemgap>-5</itemgap>
				    <orientation>vertical</orientation>
				    <control type="button" id="1111">
					    <description>Download with Subtitles script</description>
					    <height>80</height>
					    <width>470</width>
					    <label>$LOCALIZE[33003]</label>
					    <onclick>Close</onclick>
					    <onclick>Dialog.Close(VideoOSD)</onclick>
					    <onclick>ActivateWindow(SubtitleSearch)</onclick>
					    <enable>!VideoPlayer.Content(livetv)</enable>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
				    <control type="button" id="1112">
					    <height>80</height>
					    <width>470</width>
					    <label>$LOCALIZE[22006]</label>
						<onclick>SubtitleDelay</onclick>
					    <enable>VideoPlayer.HasSubtitles + VideoPlayer.SubtitlesEnabled</enable>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
				    <control type="button" id="1113">
					    <height>80</height>
					    <width>470</width>
					    <label>$LOCALIZE[32004]</label>
					    <label2>[COLOR=$VAR[SelectedTextColor]]$INFO[VideoPlayer.SubtitlesLanguage][/COLOR]</label2>
						<onclick>CycleSubtitle</onclick>
					    <enable>VideoPlayer.HasSubtitles + VideoPlayer.SubtitlesEnabled</enable>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
				    <control type="radiobutton" id="1114">
					    <height>80</height>
					    <width>470</width>
					    <label>$LOCALIZE[449]</label>
					    <radioposx>380</radioposx>
						<onclick>ShowSubtitles</onclick>
					    <selected>VideoPlayer.SubtitlesEnabled + VideoPlayer.HasSubtitles</selected>
					    <enable>VideoPlayer.HasSubtitles</enable>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
			    </control>
		    </control>
			<control type="group" id="1200">
			    <left>$PARAM[popupleft]</left>
			    <visible>Control.HasFocus(655) | ControlGroup(1210).HasFocus</visible>
			    <control type="grouplist" id="1210">
				    <left>30</left>
				    <width>470</width>
				    <height>400</height>
				    <onleft>655</onleft>
				    <onright>655</onright>
				    <onup>655</onup>
				    <ondown>655</ondown>
				    <align>right</align>
					<itemgap>-5</itemgap>
				    <orientation>vertical</orientation>
				    <control type="radiobutton" id="1211">
					    <height>80</height>
					    <width>470</width>
					    <radioposx>380</radioposx>
					    <label>$LOCALIZE[24022]</label>
						<onclick>ToggleStereoMode</onclick>
					    <selected>Integer.IsGreater(System.StereoscopicMode,0)</selected>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
				    <control type="button" id="1212">
					    <height>80</height>
					    <width>470</width>
					    <label>$LOCALIZE[31135]</label>
					    <label2>$INFO[VideoPlayer.StereoscopicMode]</label2>
						<onclick>StereoMode</onclick>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
				    <control type="radiobutton" id="1213">
					    <height>80</height>
					    <width>470</width>
					    <radioposx>380</radioposx>
					    <label>$LOCALIZE[31136]</label>
						<onclick>StereoModeToMono</onclick>
					    <selected>Integer.IsEqual(System.StereoscopicMode,9)</selected>
					    <font>Details</font>
					    <texturenofocus colordiffuse="ff161612">img/WhiteRoundedST2.png</texturenofocus>
				    </control>
			    </control>
		    </control>
		</definition>
	</include>


	<include name="OSDControls">
	    <param name="isStandard">true</param>
		<param name="isUltraCompact">false</param>
		<param name="isCompact">false</param>
		<param name="backgroundwidth">460</param>
		<param name="group1top">84</param>
		<param name="group1left">30</param>
		<param name="group1width">1305</param>
		<param name="group1align">right</param>
		<param name="group2top">0</param>
		<param name="group2left">30</param>
		<param name="group2width">1305</param>
		<param name="group2align">right</param>
		<param name="popupleft">840</param>
	    <definition>

		    <!-- Background -->
		    <control type="image">
			    <left>0</left>
			    <bottom>0</bottom>
			    <width>$PARAM[backgroundwidth]</width>
			    <height>220</height>
			    <texture border="0,30,0,30">OSD/FS_OSDBackground.png</texture>
			    <colordiffuse>80E2E2E2</colordiffuse>
			    <visible>$PARAM[isUltraCompact]</visible>
		    </control>

		    <!-- OSD Buttons -->
		    <control type="group">

			    <include condition="$PARAM[isStandard] + Skin.HasSetting(enable.bottomseekbar)">LowerOSDButtons</include>
			    <include condition="$PARAM[isStandard] + !Skin.HasSetting(enable.bottomseekbar)">RegularOSDButtons</include>
			    <include condition="$PARAM[isUltraCompact]">UltraCompactOSDTop</include>
				<include condition="$PARAM[isCompact]">CompactOSDTop</include>

			    <control type="grouplist" id="100">

				    <top>$PARAM[group1top]</top>
			        <left>$PARAM[group1left]</left>
			        <height>84</height>
			        <width>$PARAM[group1width]</width>
			        <align>$PARAM[group1align]</align>
			        <onup>101</onup>
				    <onleft>101</onleft>
			        <onright>101</onright>
			        <ondown>Close</ondown>
			        <orientation>horizontal</orientation>
			        <animation effect="fade" time="150">VisibleChange</animation>

				    <include condition="!Skin.HasSetting(AlternateOSDHighlight)">ButtonGroup1Standard</include>
					<include condition="Skin.HasSetting(AlternateOSDHighlight)">ButtonGroup1Compact</include>

			    </control>

			    <control type="grouplist" id="101">

			        <top>$PARAM[group2top]</top>
				    <left>$PARAM[group2left]</left>
			        <height>84</height>
			        <width>$PARAM[group2width]</width>
			        <align>$PARAM[group2align]</align>
			        <onup>100</onup>
			        <ondown>100</ondown>
			        <onleft>100</onleft>
			        <onright>100</onright>
			        <orientation>horizontal</orientation>

					<include condition="!Skin.HasSetting(AlternateOSDHighlight)">Group2StandardLayout</include>
					<include condition="Skin.HasSetting(AlternateOSDHighlight)">Group2CompactLayout</include>

			        <animation effect="fade" time="150">VisibleChange</animation>

				    <include condition="!Skin.HasSetting(AlternateOSDHighlight)">ButtonGroup2Standard</include>
					<include condition="Skin.HasSetting(AlternateOSDHighlight)">ButtonGroup2Compact</include>

			    </control>

		    </control>

		    <!-- Menu popups -->
		    <control type="group">

			    <include condition="[$PARAM[isStandard] + Skin.HasSetting(enable.bottomseekbar)] | $PARAM[isCompact]">LowerOSDPopups</include>
		        <include condition="$PARAM[isStandard] + !Skin.HasSetting(enable.bottomseekbar)">RegularOSDPopups</include>
			    <include condition="$PARAM[isUltraCompact]">UltraCompactPopupsTop</include>

	    		<include content="OSDPopups">
				    <param name="popupleft">$PARAM[popupleft]</param>
				</include>

		    </control>

		</definition>
	</include>

	<include name="SidebladeNowPlaying">
	    <param name="left">15</param>
		<param name="top">0</param>
		<param name="height">64</param>
		<param name="itemsize">64</param>
		<param name="width">460</param>
		<param name="itemgap">10</param>
		<param name="onleft">9000</param>
	    <definition>
			<control type="grouplist" id="9700">
				<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
				<animation effect="fade" time="300">VisibleChange</animation>
				<orientation>horizontal</orientation>
				<itemgap>10</itemgap>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<onleft>$PARAM[onleft]</onleft>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<visible>Player.HasAudio</visible>
				<visible>!System.HasActiveModalDialog</visible>
				<!-- Previous -->
				<control type="button" id="9701">
		            <width>$PARAM[itemsize]</width>
                    <height>$PARAM[itemsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$VAR[HighlightColor]" flipx="true">OSD/compact/next.png</texturefocus>
                    <texturenofocus colordiffuse="$VAR[LabelTextColor]" flipx="true">OSD/compact/next.png</texturenofocus>
		            <onclick>PlayerControl(Previous)</onclick>
		        </control>
		        <!-- Play/Pause -->
		        <control type="togglebutton" id="9702">
                    <width>$PARAM[itemsize]</width>
                    <height>$PARAM[itemsize]</height>
                    <label/>
                    <altlabel></altlabel>
                    <font/>
                    <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/pause.png</texturefocus>
                    <texturenofocus colordiffuse="$VAR[LabelTextColor]">OSD/compact/pause.png</texturenofocus>
                    <usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
                    <alttexturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/play.png</alttexturefocus>
                    <alttexturenofocus colordiffuse="$VAR[LabelTextColor]">OSD/compact/play.png</alttexturenofocus>
		            <onclick>PlayerControl(Play)</onclick>
		            <visible>Player.PauseEnabled</visible>
                    <animation effect="fade" start="100" end="33" time="100" condition="!Player.PauseEnabled">Conditional</animation>
                </control>
		        <!-- Stop -->
		        <control type="button" id="9703">
		            <width>$PARAM[itemsize]</width>
                    <height>$PARAM[itemsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/stop.png</texturefocus>
                    <texturenofocus colordiffuse="$VAR[LabelTextColor]">OSD/compact/stop.png</texturenofocus>
		            <onclick>PlayerControl(Stop)</onclick>
		        </control>
		        <!-- Next -->
		        <control type="button" id="9704">
		            <width>$PARAM[itemsize]</width>
                    <height>$PARAM[itemsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/next.png</texturefocus>
                    <texturenofocus colordiffuse="$VAR[LabelTextColor]">OSD/compact/next.png</texturenofocus>
		            <onclick>PlayerControl(Next)</onclick>
		        </control>
		        <!-- Fullscreen -->
		        <control type="button" id="9705">
		            <width>$PARAM[itemsize]</width>
                    <height>$PARAM[itemsize]</height>
                    <label/>
                    <font/>
                    <texturefocus colordiffuse="$VAR[HighlightColor]">OSD/compact/fullscreen.png</texturefocus>
                    <texturenofocus colordiffuse="$VAR[LabelTextColor]">OSD/compact/fullscreen.png</texturenofocus>
		            <onclick>fullscreen</onclick>
		        </control>
			</control>
		</definition>
	</include>

</includes>